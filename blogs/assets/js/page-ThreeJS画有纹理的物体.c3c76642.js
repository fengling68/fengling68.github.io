(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{580:function(e,n,t){"use strict";t.r(n);var r=t(1),a=Object(r.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"threejs画有纹理的物体"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threejs画有纹理的物体"}},[this._v("#")]),this._v(" ThreeJS画有纹理的物体")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[this._v("/* \n    1、初始化场景\n    2、初始化相机\n    3、初始化渲染器\n    4、实时渲染\n    5、画有纹理的物体\n        (1)画平面，并赋予纹理坐标；\n        (2)加载纹理；\n        (3)将纹理用于材质；\n*/\n\nvar scene;          // 场景\nvar camera;         // 相机\nvar renderer;       // 渲染器\nvar width = document.getElementById('canvasdiv').clientWidth;\nvar height = document.getElementById('canvasdiv').clientHeight;\n\n\n// 开始执行\nthreeStart();\nfunction threeStart() {\n    initScene();        // 初始化场景\n    initCamera();       // 初始化相机\n    initRender();       // 初始化渲染器\n    initRect();         // 加载纹理图\n    render();           // 循环动画\n}\n\n// 1、场景\nfunction initScene() {\n    scene = new THREE.Scene();\n}\n// 2、相机\nfunction initCamera() {\n    camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n    camera.position.x = 0;  \n    camera.position.y = 0; \n    camera.position.z = 10;\n}\n// 3、渲染器\nfunction initRender() {\n    renderer = new THREE.WebGLRenderer({\n        antialias: true\n    });\n    renderer.setSize(width, height);\n    document.getElementById('canvasdiv').appendChild(renderer.domElement);\n    renderer.setClearColor(0x000000, 0.6);\n}\n// 4、实时渲染\nfunction render() {\n    renderer.clear();\n    renderer.render(scene, camera);\n    // requestAnimationFrame(render);     \n}\n\n// 5、画纹理物体\nfunction initRect() {\n    // 画平面\n    var geo = new THREE.PlaneGeometry(500, 400, 1, 1);\n    // 纹理坐标\n    geo.vertices[0].uv = new THREE.Vector2(0,0);\n    geo.vertices[1].uv = new THREE.Vector2(2,0);\n    geo.vertices[2].uv = new THREE.Vector2(2,2);\n    geo.vertices[3].uv = new THREE.Vector2(0,2);\n    // 加载纹理\n    var texture = THREE.ImageUtils.loadTexture(\"./img/aaa.jpg\", null, function (t) {        // 有跨域问题\n\n    });\n    // 将纹理应用于材质\n    var material = new THREE.MeshBasicMaterial({\n        map: texture\n    })\n    var mesh = new THREE.Mesh(geo, material);\n    scene.add(mesh);\n}\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);