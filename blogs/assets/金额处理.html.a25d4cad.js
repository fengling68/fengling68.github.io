import{_ as n,o as s,c as a,f as p}from"./app.84a1f894.js";const t={},e=p(`<h1 id="\u91D1\u989D\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u91D1\u989D\u5904\u7406" aria-hidden="true">#</a> \u91D1\u989D\u5904\u7406</h1><h2 id="\u91D1\u989D-\u5206-\u8F6C\u6362-\u5143-\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u91D1\u989D-\u5206-\u8F6C\u6362-\u5143-\u5904\u7406" aria-hidden="true">#</a> \u91D1\u989D&#39;\u5206&#39;\u8F6C\u6362&#39;\u5143&#39;\u5904\u7406</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">priceHandle</span><span class="token punctuation">(</span><span class="token parameter">price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">let</span> newPrice <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newPrice <span class="token operator">=</span> price<span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>price <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newPrice <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">Number</span><span class="token punctuation">(</span>price <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.00</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>price <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newPrice <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">Number</span><span class="token punctuation">(</span>price <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">0</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  newPrice <span class="token operator">=</span> price <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> newPrice<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre></div><h2 id="\u91D1\u989D\u8BA1\u7B97\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u91D1\u989D\u8BA1\u7B97\u65B9\u6CD5" aria-hidden="true">#</a> \u91D1\u989D\u8BA1\u7B97\u65B9\u6CD5</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">moneyHandle</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> len</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span>\uFF1B
<span class="token punctuation">}</span>
</code></pre></div>`,5),o=[e];function c(u,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","\u91D1\u989D\u5904\u7406.html.vue"]]);export{r as default};
