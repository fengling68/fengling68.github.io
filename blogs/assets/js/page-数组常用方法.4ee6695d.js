(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{796:function(a,r,s){"use strict";s.r(r);var n=s(1),t=Object(n.a)({},(function(){var a=this,r=a.$createElement,s=a._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"数组常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组常用方法"}},[a._v("#")]),a._v(" 数组常用方法")]),a._v(" "),s("p",[a._v("var arr = [10,'hello',true, [20 , 30 , 40] ];   //二维数组")]),a._v(" "),s("h2",{attrs:{id:"push-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push-方法"}},[a._v("#")]),a._v(" push()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、在末尾追加数组元素        arr.push(20 , '姬如千泷');\n2、返回值：返回新数组的长度\n3、原数组发生改变\n")])])]),s("h2",{attrs:{id:"pop-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pop-方法"}},[a._v("#")]),a._v(" pop()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、删除数组的最后一个元素   arr.pop();\n2、返回值：删除的元素\n3、原数组发生改变\n")])])]),s("h2",{attrs:{id:"shift-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shift-方法"}},[a._v("#")]),a._v(" shift()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、删除数组的第一个元素     arr.shift();\n2、返回值：删除的元素\n3、原数组发生改变\n")])])]),s("h2",{attrs:{id:"unshift-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unshift-方法"}},[a._v("#")]),a._v(" unshift()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、在开头添加元素           arr.unshift(20 , '荆天明');\n2、返回值：新数组的长度\n3、原数组发生改变\n\n索引下标是固定的从前向后，0 开始\n")])])]),s("h2",{attrs:{id:"indexof-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexof-方法"}},[a._v("#")]),a._v(" indexOf()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、从左向右查找指定元素的下标   arr.indexOf(30);\n2、返回值：下标 ; 若查找不到返回值为 -1 ;\n3、原数组不发生改变\n")])])]),s("h2",{attrs:{id:"lastindexof-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof-方法"}},[a._v("#")]),a._v(" lastIndexOf()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、从右向左查找指定元素的下标   arr.lastIndexOf(30);\n2、返回值：下标 ; 若查找不到返回值为 -1 ;\n3、原数组不发生改变\n\n//数组去重，并放入新的数组\nvar arr = [1,3,5,7,9,10,3,4,5,3,7];\n   var newArr = [];\nfor(var i = 0 ; i < arr.length ; i++){\n    if(newArr.indexOf(arr[i]) == -1){\n         newArr.push(arr[i]);\n    }\n}\nconsole.log(newArr);\n")])])]),s("h2",{attrs:{id:"join-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join-方法"}},[a._v("#")]),a._v(" join()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('1、连接：把数组转换为字符串  arr1.join("-");   //用 - 连接\n2、返回值：新的字符串\n3、原数组不发生改变\n')])])]),s("h2",{attrs:{id:"concat-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat-方法"}},[a._v("#")]),a._v(" concat()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、拼接合并数组              arr1.concat(arr2);   //arr1在前，arr2在后\n2、返回值：数组1 + 数组2 新的数组\n3、原数组不发生改变\n")])])]),s("h2",{attrs:{id:"reverse-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse-方法"}},[a._v("#")]),a._v(" reverse()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、倒置数组                 arr.reverse();\n2、返回倒置后的新数组\n3、原数组发生改变\n")])])]),s("h2",{attrs:{id:"slice-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice-方法"}},[a._v("#")]),a._v(" slice()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("参数一：开始位置下标，包含起始位置元素\n参数二：结束位置下标，不包含结束位置元素\n\n1、截取数组元素arr.slice(2); 从下标2截取到最后\n            arr.slice(2,5);从下标2截取到下标5之前\n2、返回截取元素构成的新数组\n3、原数组不发生改变\n")])])]),s("h2",{attrs:{id:"splice-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splice-方法"}},[a._v("#")]),a._v(" splice()方法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("参数一：开始位置下标，包含起始位置元素  \n参数二：截取的长度 ; 若 > 0 , 则删除元素 ; 若 = 0 , 则添加(多个)元素\n\n1、截取数组元素\n2、返回截取元素构成的新数组\n3、原数组发生改变\n\nvar arr = [10,20,30,40,50];\nconsole.log(arr.splice(1,3));\n//结果：[20,30,40]\n\nconsole.log(arr.splice(1,0,true,'abc'));  //截取个数为0\n//结果：空数组\n\narr.splice(1 , 0 , 'abc' , true);\n//结果：[10, 'abc' , true ,20,30,40,50]\n")])])]),s("h2",{attrs:{id:"sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[a._v("#")]),a._v(" sort()")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("数组元素的排序:转换为字符来进行比较排序(ASCII码比较)\n\nvar arr1 = ['a','b','ef','cd'];\nconsole.log(arr1.sort());      // a ,b ,cd ,ef\n\nvar arr2 = [31,21,13,9,52,11];\nconsole.log(arr2.sort());      //11,13,21,32,52,9\n\n\n//元素从小到大排序\nvar arr3 = [31,21,13,9,52,11];\narr3.sort(function(a,b){\n    console.log(arr3);\n    console.log(a);\n    console.log(b);\n    return a - b;    //从小到大\n});\n\nfunction rule(a,b){\n    return a-b;\n}\narr.sort(rule);\nconsole.log(arr3);\n")])])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("改变原数组：\nshift：将第一个元素删除并且返回删除元素，空即为undefined\nunshift：向数组开头添加元素，并返回新的长度\npop：删除最后一个并返回删除的元素\npush：向数组末尾添加元素，并返回新的长度\nreverse：颠倒数组顺序\nsort：对数组排序\nsplice(start,length,item)：删，增，替换数组元素，返回被删除数组，无删除则不返回\n\n不改变原数组：\nconcat：连接多个数组，返回新的数组\njoin：将数组中所有元素以参数作为分隔符放入一个字符\nslice(start,end)：返回选定元素\nmap,filter,some,every等：不改变原数组 \n")])])]),s("h2",{attrs:{id:"冒泡排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序"}},[a._v("#")]),a._v(" 冒泡排序")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("//要求对该数组中元素从小到大顺序排列\nvar = [10,2,30,3,5,7,34,13]; \nfor(var i=0 ; i < arr.length ; i++){      //比较的趟数\n    for(var j=0 ; j < arr.length-i ; j++){   //每趟比较的次数\n        if(arr[j] > arr[j+1]){\n            var temp = arr[j];\n            arr[j] = arr[j+1];\n            arr[j+1] = temp;\n        }\n    }\n}\nconsole.log(arr);\n")])])])])}),[],!1,null,null,null);r.default=t.exports}}]);