import{_ as n,o as s,c as a,f as p}from"./app.79208424.js";const t={},o=p(`<h1 id="随机骰子" tabindex="-1"><a class="header-anchor" href="#随机骰子" aria-hidden="true">#</a> 随机骰子</h1><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 随机数值</span>
<span class="token keyword">function</span> <span class="token function">randomNum</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 统计数值</span>
<span class="token keyword">function</span> <span class="token function">totalNumbers</span><span class="token punctuation">(</span><span class="token parameter">numArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> initNum <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> numArr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> curItem</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> curItem<span class="token punctuation">,</span> initNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span> 随机骰子
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">骰子个数</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">总点数</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function">randomDice</span><span class="token punctuation">(</span><span class="token parameter">diceNum <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> totalNum <span class="token operator">=</span> <span class="token number">3</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>totalNum <span class="token operator">&lt;</span> diceNum <span class="token operator">||</span> totalNum <span class="token operator">&gt;</span> diceNum <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// 🎲 生成点数</span>
  <span class="token keyword">let</span> dices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dicesCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> index <span class="token operator">&lt;=</span> diceNum<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>totalNum <span class="token operator">===</span> diceNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dicesCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>totalNum <span class="token operator">===</span> diceNum <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dicesCount <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>totalNum <span class="token operator">&gt;</span> diceNum <span class="token operator">&amp;&amp;</span> totalNum <span class="token operator">&lt;</span> diceNum <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dicesCount <span class="token operator">=</span> index <span class="token operator">&lt;</span> diceNum
        <span class="token operator">?</span> <span class="token function">randomNum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>totalNum <span class="token operator">-</span> <span class="token punctuation">(</span>diceNum <span class="token operator">-</span> index<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">totalNumbers</span><span class="token punctuation">(</span>dices<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">:</span> totalNum <span class="token operator">-</span> <span class="token function">totalNumbers</span><span class="token punctuation">(</span>dices<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    dices<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dicesCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 🎲 总点数不等 || 存在点数大于六，重新生成点数</span>
  <span class="token keyword">const</span> totalCount <span class="token operator">=</span> <span class="token function">totalNumbers</span><span class="token punctuation">(</span>dices<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> hasOverSix <span class="token operator">=</span> dices<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">&gt;</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>totalCount <span class="token operator">!==</span> totalNum <span class="token operator">||</span> hasOverSix<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">randomDice</span><span class="token punctuation">(</span>diceNum<span class="token punctuation">,</span> totalNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> dices<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 🎲 骰子测试</span>
<span class="token keyword">let</span> diceNum <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> totalNum <span class="token operator">=</span> <span class="token function">randomNum</span><span class="token punctuation">(</span>diceNum<span class="token punctuation">,</span> diceNum <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dices <span class="token operator">=</span> <span class="token function">randomDice</span><span class="token punctuation">(</span>diceNum<span class="token punctuation">,</span> totalNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>diceNum<span class="token punctuation">,</span> totalNum<span class="token punctuation">,</span> dices<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,2),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(t,[["render",e],["__file","随机骰子.html.vue"]]);export{i as default};
