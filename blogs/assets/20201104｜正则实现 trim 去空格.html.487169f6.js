import{_ as n,o as s,c as a,f as t}from"./app.034b081e.js";const p={},e=t(`<h1 id="正则实现-trim-去空格" tabindex="-1"><a class="header-anchor" href="#正则实现-trim-去空格" aria-hidden="true">#</a> 正则实现 trim 去空格</h1><h2 id="原型方式" tabindex="-1"><a class="header-anchor" href="#原型方式" aria-hidden="true">#</a> 原型方式</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 加到 String 对象的内置方法中</span>
<span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">trim</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)|(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">ltrim</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">rtrim</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;%c%s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;background: greenyellow;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;  哈哈哈哈 哈哈哈哈  &#39;</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;%c%s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;background: greenyellow;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;  哈哈哈哈 哈哈哈哈  &#39;</span><span class="token punctuation">.</span><span class="token function">ltrim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;%c%s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;background: greenyellow;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;  哈哈哈哈 哈哈哈哈  &#39;</span><span class="token punctuation">.</span><span class="token function">rtrim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="方法封装" tabindex="-1"><a class="header-anchor" href="#方法封装" aria-hidden="true">#</a> 方法封装</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">strTrim</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> setting <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)|(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">l</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">r</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>setting<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;%c%s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;background: greenyellow;&#39;</span><span class="token punctuation">,</span> <span class="token function">strTrim</span><span class="token punctuation">(</span><span class="token string">&#39;  哈哈哈哈 哈哈哈哈  &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;%c%s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;background: greenyellow;&#39;</span><span class="token punctuation">,</span> <span class="token function">strTrim</span><span class="token punctuation">(</span><span class="token string">&#39;  哈哈哈哈 哈哈哈哈  &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;l&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;%c%s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;background: greenyellow;&#39;</span><span class="token punctuation">,</span> <span class="token function">strTrim</span><span class="token punctuation">(</span><span class="token string">&#39;  哈哈哈哈 哈哈哈哈  &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,5),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","20201104｜正则实现 trim 去空格.html.vue"]]);export{k as default};
