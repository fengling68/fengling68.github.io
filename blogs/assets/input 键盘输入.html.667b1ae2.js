import{_ as n,o as s,c as a,f as p}from"./app.9f18a3e5.js";const t={},e=p(`<h1 id="input-\u952E\u76D8\u8F93\u5165" tabindex="-1"><a class="header-anchor" href="#input-\u952E\u76D8\u8F93\u5165" aria-hidden="true">#</a> input \u952E\u76D8\u8F93\u5165</h1><h2 id="\u8C03\u8D77\u6570\u5B57\u952E\u76D8" tabindex="-1"><a class="header-anchor" href="#\u8C03\u8D77\u6570\u5B57\u952E\u76D8" aria-hidden="true">#</a> \u8C03\u8D77\u6570\u5B57\u952E\u76D8</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// ios\u7AEFbug\uFF1A\u5F39\u7A97\u6570\u5B57\u952E\u76D8\u4F46\u53EF\u4EE5\u8F93\u5165\u975E\u6570\u5B57\u5B57\u7B26</span>
<span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>input <span class="token operator">:</span>type<span class="token operator">=</span><span class="token string">&quot;type&quot;</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;data&quot;</span> @focus<span class="token operator">=</span><span class="token string">&quot;changeType(0)&quot;</span> @blur<span class="token operator">=</span><span class="token string">&quot;changeType(1)&quot;</span> @input<span class="token operator">=</span><span class="token string">&quot;change(data)&quot;</span> ref<span class="token operator">=</span><span class="token string">&quot;input&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">changeType</span><span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">change</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      val <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\\s*)|(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^\\d.]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
      <span class="token comment">// \u53EA\u80FD\u662F\u6570\u5B57\u548C\u5C0F\u6570\u70B9\uFF0C\u4E0D\u80FD\u662F\u5176\u4ED6\u8F93\u5165</span>
      val <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u4FDD\u8BC1\u7B2C\u4E00\u4F4D\u53EA\u80FD\u662F\u6570\u5B57\uFF0C\u4E0D\u80FD\u662F\u70B9</span>
      val <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\.</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C0F\u6570\u53EA\u80FD\u51FA\u73B01\u4F4D</span>
      val <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;$#$&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;$#$&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C0F\u6570\u70B9\u540E\u9762\u4FDD\u75592\u4F4D</span>
      val <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\-)*(\\d+)\\.(\\d\\d).*$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1$2.$3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div>`,3),o=[e];function c(l,r){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","input \u952E\u76D8\u8F93\u5165.html.vue"]]);export{k as default};
