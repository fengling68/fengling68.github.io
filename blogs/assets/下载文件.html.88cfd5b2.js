import{_ as t,r as p,o,c as e,a as n,b as a,d as c,f as l}from"./app.70e3165a.js";const u={},i=l(`<h1 id="下载文件" tabindex="-1"><a class="header-anchor" href="#下载文件" aria-hidden="true">#</a> 下载文件</h1><h2 id="浏览器下载图片" tabindex="-1"><a class="header-anchor" href="#浏览器下载图片" aria-hidden="true">#</a> 浏览器下载图片</h2><p>一般来说前端实现的思路就是通过动态创建a标签，设置其download属性，最后删除a就好了，对于不是图片的文件一般都可以下载，但是如果是图片，有些浏览器会自动打开图片，所以我们需要手动把它转化为data:URLs或blob:URLs，基于这个原理，我们可以用fileReader，也可以用fetch-URL.createObjectURL，这里经过大量测试我采用后者：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> filename</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">blob</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>
    a<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
    a<span class="token punctuation">.</span>download <span class="token operator">=</span> filename<span class="token punctuation">;</span>
    a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,4),r={class:"custom-container tip"},k=n("p",{class:"custom-container-title"},"Tips",-1),d=n("p",null,"作者：徐小夕",-1),_={href:"https://juejin.im/post/5d8399e8f265da03a9506fc6",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,"来源：掘金",-1),h=n("p",null,"著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。",-1);function m(b,w){const s=p("ExternalLinkIcon");return o(),e("div",null,[i,n("div",r,[k,d,n("p",null,[a("链接："),n("a",_,[a("https://juejin.im/post/5d8399e8f265da03a9506fc6"),c(s)])]),f,h])])}const L=t(u,[["render",m],["__file","下载文件.html.vue"]]);export{L as default};
