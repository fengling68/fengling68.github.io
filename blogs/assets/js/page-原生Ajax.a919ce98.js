(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{593:function(a,n,e){"use strict";e.r(n);var t=e(1),s=Object(t.a)({},(function(){var a=this,n=a.$createElement,e=a._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"原生ajax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原生ajax"}},[a._v("#")]),a._v(" 原生Ajax")]),a._v(" "),e("h1",{attrs:{id:"ajax异步通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ajax异步通信"}},[a._v("#")]),a._v(" Ajax异步通信")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("客户端与服务器端请求、发送数据\n")])])]),e("h2",{attrs:{id:"使用ajax的步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用ajax的步骤"}},[a._v("#")]),a._v(" 使用Ajax的步骤")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("1、创建XMLHttpRequest对象\n2、通过ajax对象的open方法配置请求\n3、通过ajax对象的send方法发送请求\n4、通过ajax对象的onreadystatechange事件，监听响应的状态\n5、当ajax.readyState == 4(响应就绪) && ajax.status == 200(响应资源就绪), 说明响应成功。\n6、通过ajax.responseText || ajax.responseXML属性获取响应数据\n")])])]),e("h2",{attrs:{id:"代码实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[a._v("#")]),a._v(" 代码实现")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('window.onload = function(){\n    /*获取元素......*/\n    /************* 1、get发送请求无惨 ***********************/\n    getBtn.onclick = function(){\n        //创建\n        var ajax = (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");\n        //配置\n        ajax.open("get","http://.../ajaxTest");\n        //发送\n        ajax.send(null);\n        //响应事件\n        ajax.onreadystatechange = function(){\n            //响应就绪 //响应资源就绪\n            if(ajax.readyState == 4 && ajax.status == 200){\n                console.log("响应已经就绪了");\n                var re = ajax.responseText || ajax.responseXML;\n                var data = JSON.parse(re);\n                console.log(data);\n            }\n        }\n    }\n\n\n    /********** 2、通过get传参方式发送数据 ************/\n    sendDataByGet.onclick = function(){\n        var ajax = (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");\n\n        ajax.open("GET","http://.../ajaxGet?name=zs&age=20&sex=man;");\n        ajax.send(null);\n\n        //响应事件\n        ajax.onreadystatechange = function(){\n            if(ajax.readyState == 4 && ajax.status == 200){   \n                var re = ajax.responseText || ajax.responseXML;\n                var data = JSON.parse(re);\n                console.log(data);\n            }\n        }\n\n    }\n\n    /********** 3、通过post传参方式发送数据 ************/\n    sendDataByPost.onclick = function(){\n        var ajax = (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");\n        ajax.open("post","http://.../ajaxPost");\n        //post设置请求头\n        ajax.setRequestHeader("Content-type","applicction/x-www-form-urlencoded");\n        ajax.send("name=zs&age=20&sex=man");\n        ajax.onreadystatechange = function(){\n            if(ajax.readyState == 4 && ajax.status == 200){ \n                var re = ajax.responseText || ajax.responseXML;\n                var data = JSON.parse(re);\n                console.log(data);\n            }\n        }\n    }\n}\n')])])]),e("h2",{attrs:{id:"get和post的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get和post的区别"}},[a._v("#")]),a._v(" get和post的区别")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("1、数据携带方式不同\n    GET请求的数据会附在URL之后（就是把数据放置在HTTP协议头中），以?分割URL和传输数据，参数之间以&相连，\n    POST把提交的数据则放置在是HTTP包的包体中。\n2、携带数据量不同\n    GET方式提交的数据最多只能是1024字节\n    POST是没有大小限制的\n3、安全性\n    POST方式的安全性高于GET方式\n4、应用\n    GET是向服务器发索取数据的一种请求，而POST是向服务器提交数据的一种请求\n5、传递方式\n    get数据拼接在url后, 键值对之间&, 键值之间=, send()无参。\n    post数据单独打包发送, 设置请求头, send()传参。\n")])])]),e("h2",{attrs:{id:"ajax的封装-两种"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ajax的封装-两种"}},[a._v("#")]),a._v(" Ajax的封装（两种）")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('/**\n * Created by jiaoshou on 2016/1/20.\n */\n//创建xhr的过程封装\nfunction createXHR() {\n    var xhr = null;\n    if (XMLHttpRequest) {\n        xhr = new XMLHttpRequest();\n    }else{\n        xhr = ActiveXObject("Microsoft.XMLHTTP");\n    }\n    return xhr;\n}\n\n//把异步请求封装\nfunction ajax(type, url, data, async, success, error) {\n    var xhr = createXHR();\n    type = type == "get"?"get":"post";\n    async = async ? true : false;\n    xhr.open(type, url, async);\n    //3 注册状态发生改变的时间\n    if (type == "post") {\n        xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");\n    }\n    xhr.onreadystatechange = function(){\n        if(xhr.readyState == 4 ){\n            if(xhr.status == 200) {\n                //获取服务器的数据\n                var data = xhr.responseText;\n                //成功的回调\n                success(data);\n            }else{\n                //服务器出错\n                error();\n            }\n        }\n    }\n    //4 发送请求\n    xhr.send(data);\n}\n\n//传过来的data的样子\n//data = {"type":"get","url":"",data:null,async:true,fn,fn};\nfunction ajax2(data) {\n    var xhr,type,url,async;\n    xhr = createXHR();\n    type = data.type == "get"? "get":"post";\n    if (data.url) {\n        url = data.url;\n    }\n    async = data.async? true: false;\n\n    xhr.open(type, url, async);\n    //3 注册状态发生改变的时间\n    if (type == "post") {\n        xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");\n    }\n    xhr.onreadystatechange = function(){\n        if(xhr.readyState == 4 ){\n            if(xhr.status == 200) {\n                //获取服务器的数据\n                var response = xhr.responseText;\n                //成功的回调\n                if (typeof data.success == "function") {\n                    data.success(response);\n                }\n            }else{\n                //服务器出错\n                if (typeof data.error == "function") {\n                    data.error();\n                }\n            }\n        }\n    }\n    //4 发送请求\n    xhr.send(data.data);\n}\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);