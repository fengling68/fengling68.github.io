(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{794:function(e,n,l){"use strict";l.r(n);var s=l(1),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"dom层级关系"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#dom层级关系"}},[e._v("#")]),e._v(" DOM层级关系")]),e._v(" "),l("h2",{attrs:{id:"表单元素"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#表单元素"}},[e._v("#")]),e._v(" 表单元素")]),e._v(" "),l("ul",[l("li",[e._v("输入框内容，按钮内容，文本域内容，input，file")]),e._v(" "),l("li",[e._v("元素节点.value;")])]),e._v(" "),l("h2",{attrs:{id:"非表单元素"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#非表单元素"}},[e._v("#")]),e._v(" 非表单元素")]),e._v(" "),l("ul",[l("li",[e._v("innerHTML(文本+标签)    innerText(设置纯文本)")])]),e._v(" "),l("p",[e._v("1、获取文本内容")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v('var myDiv = document.getElementsByTagName("div")[0];\nconsole.log(myDiv.innerHTML);    //开始标签到结束标签之间的部分\nconsole.log(myDiv.outerHTML);    //开始标签到结束标签之间的部分+标签自身\nconsole.log(myDiv.innerText);\n')])])]),l("p",[e._v("2、设置文本内容")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v('myDiv.innerHTML = "我是div <p>我是p标签</p>"\nmyDiv.innerText = "我只能设置纯文本";\n')])])]),l("h2",{attrs:{id:"dom节点层级关系"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#dom节点层级关系"}},[e._v("#")]),e._v(" DOM节点层级关系")]),e._v(" "),l("p",[e._v("1、parentNode 父节点")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v('   var son1 = document.getElementsByClassName("son1")[0];\n   console.log(son1.parentNode);\n')])])]),l("p",[e._v("2、childNodes 所有子节点(但实际只操作元素节点)")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("   console.log(son1.parentNode.childNodes);\n")])])]),l("p",[e._v("3、children  直接拿到元素子节点")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("   var arrEle = son1.parentNode.children;                  //所有子元素节点\n   var arrEle = son1.parentNode.children[2];               //第三个子元素节点\n")])])]),l("p",[e._v("4、firstChild 第一个子节点    //与childNodes对应")]),e._v(" "),l("p",[e._v("5、lastChild 最后一个子节点")]),e._v(" "),l("p",[e._v("6、firstElementChild 第一个元素子节点         //与children对应")]),e._v(" "),l("p",[e._v("7、lastElementChild 最后一个元素子节点")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("   console.log(son1.parentNode.firstChild);\n   console.log(son1.parentNode.lastChild);\n   console.log(son1.parentNode.firstElementChild);\n   console.log(son1.parentNode.lastElementChild);\n")])])]),l("p",[e._v("8、nextSibling  下一个兄弟节点                             //与childNodes对应")]),e._v(" "),l("p",[e._v("9、previousSibling  上一个兄弟节点")]),e._v(" "),l("p",[e._v("10、nextElementSibling 下一个元素兄弟节点                  //与children对应")]),e._v(" "),l("p",[e._v("11、previousElementSibling 上一个元素兄弟节点")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("   console.log(son1.nextSibling);\n   console.log(son1.previousSibling);\n   console.log(son1.previousElementSibling);\n   console.log(son1.nextElementSibling);\n")])])]),l("h2",{attrs:{id:"每个节点都有三个属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#每个节点都有三个属性"}},[e._v("#")]),e._v(" 每个节点都有三个属性")]),e._v(" "),l("p",[e._v("1、三个节点属性")]),e._v(" "),l("p",[e._v("元素属性：nodeType   所有元素节点的类型都是 1 ;")]),e._v(" "),l("p",[e._v("元素名称：nodeName")]),e._v(" "),l("p",[e._v("元素值： nodeValue")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v('var myDiv = document.getElementById("myDiv");\nconsole.log(myDiv.nodeType);     //结果 ：1\nconsole.log(myDiv.nodeName);     //结果 ：DIV\nconsole.log(myDiv.nodeValue);    //结果 ：null\n')])])]),l("p",[e._v("2、删选元素节点")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("var arr = son1.parentNode.childNodes;\nvar newArr = [];\nfor(var i = 0 ; i < arr.length ; i++){\n    if(arr[i].nodeType == 1){\n        newArr[newArr.length] = arr[i];\n    }\n}\n")])])]),l("h2",{attrs:{id:"总结"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),l("ol",[l("li",[l("p",[e._v("parentNode 父节点")])]),e._v(" "),l("li",[l("p",[e._v("childNodes 所有子节点")])]),e._v(" "),l("li",[l("p",[e._v("firstChild 第一个子节点               //与 childNodes 对应")])]),e._v(" "),l("li",[l("p",[e._v("lastChild 最后一个子节点")])]),e._v(" "),l("li",[l("p",[e._v("nextSibling  下一个兄弟节点")])]),e._v(" "),l("li",[l("p",[e._v("previousSibling  上一个兄弟节点")])]),e._v(" "),l("li",[l("p",[e._v("children  直接拿到元素子节点")])]),e._v(" "),l("li",[l("p",[e._v("firstElementChild 第一个元素子节点      //与 children 对应")])]),e._v(" "),l("li",[l("p",[e._v("lastElementChild 最后一个元素子节点")])]),e._v(" "),l("li",[l("p",[e._v("nextElementSibling 下一个元素兄弟节点")])]),e._v(" "),l("li",[l("p",[e._v("previousElementSibling 上一个元素兄弟节点")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);