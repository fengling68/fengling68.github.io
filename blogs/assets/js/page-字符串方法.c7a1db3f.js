(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{491:function(s,a,t){"use strict";t.r(a);var r=t(1),e=Object(r.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"字符串方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串方法"}},[s._v("#")]),s._v(" 字符串方法")]),s._v(" "),a("h2",{attrs:{id:"字符串的创建方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的创建方式"}},[s._v("#")]),s._v(" 字符串的创建方式")]),s._v(" "),a("p",[s._v("1、字面量方式")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('var str1 = "123abc";\nconsole.log(str1);          //123456\nconsole.log(str1.length);   //结果为6\nconsole.log(typeof str1);   //数据类型：string\n')])])]),a("p",[s._v("2、高级方式")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('var str2 = new String(\'456\');\nconsole.log(str2);          //String{0:"4" , 1:"5" , 2:"6" , length:6 , ...}\nconsole.log(str2.length);   //结果为3 \nconsole.log(typeof str2);   //数据类型：object\n')])])]),a("p",[a("strong",[s._v("小写字母和大写字母ASCII码 a:97   A:65")])]),s._v(" "),a("h2",{attrs:{id:"charat-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#charat-index"}},[s._v("#")]),s._v(" charAt(index)")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('1、检索指定位置上的字符\n2、返回值：对应位置上的字符 ; 查找不到：结果为空\n\nvar str = "123,abc";\nconsole.log(str.charAt(1));    //结果2\nconsole.log(str.charAt(10));   //结果空\n\n逐一输出每个字符\nfor(var i = 0 ; i < str.length ; i++){\n    console.log( str.charAt(i) );      //1  2  3  ,  4  5  6\n}\n')])])]),a("h2",{attrs:{id:"charcodeat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#charcodeat"}},[s._v("#")]),s._v(" charCodeAt()")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('1、检索指定位置上字符的ASCII编码\n2、返回值：对应字符的ASCII编码\n\nvar str = "123,abc";\nconsole.log(str.charCodeAt(4));          //下标4对应的字符a结果：97\n')])])]),a("h2",{attrs:{id:"string-fromcharcode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-fromcharcode"}},[s._v("#")]),s._v(" String.fromCharCode()")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1、通过ASCII编码找到对应字符\n2、返回值：查找到的字符\nconsole.log(String.fromCharCode(97));     //结果97对应的字符a\n")])])]),a("h2",{attrs:{id:"indexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[s._v("#")]),s._v(" indexOf()")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('1、从前向后查找指定字符的下标\n2、返回值：找到返回下标 ; 找不到返回 -1。\n3、参数1：查找的指定字符   参数2：开始查找的位置(包含)\n\nvar str2 = \'123,456,abc\';\nconsole.log(str2.indexOf("3"));           //结果：下标2\nconsole.log(str2.indexOf("3",3));         //结果：-1\n')])])]),a("h2",{attrs:{id:"lastindexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof"}},[s._v("#")]),s._v(" lastIndexOf()")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('1、从后向前查找指定字符下标(索引是固定的)\n2、参数1：查找的指定字符   参数2：开始查找的位置(包含)\n3、返回值：找到返回下标 ; 找不到返回 -1。\n\nvar str2 = \'123,456,abc\';\nconsole.log(str2.indexOf("3"));           //结果：下标2\nconsole.log(str2.indexOf("3",3));         //结果：-1\n')])])]),a("h2",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[s._v("#")]),s._v(" replace()")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1、替换字符\n2、参数一：被替换的旧字符  参数二：替换后的新字符\n3、返回值：替换后的新字符串\n\nvar str = \"abcdef\";\nconsole.log(str.replace('a' , 'A'));      //结果  Abcdef\nconsole.log(str);                         //结果  abcdef\n")])])]),a("h2",{attrs:{id:"touppercase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#touppercase"}},[s._v("#")]),s._v(" toUpperCase()")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1、把小写英文转换成大写英文\n2、返回值：转换之后的新字符串\n3、原字符串未发生改变\n\nvar str = 'abcdef';\nconsole.log(str.toUpperCase());           //结果  ABCDEF\nconsole.log(str);                         //结果  abcdef\n\nvar s = str.charAt(5);\nconsole.log(s.toUpperCase());             //结果  F\n")])])]),a("h2",{attrs:{id:"tolowercase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tolowercase"}},[s._v("#")]),s._v(" toLowerCase()")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1、把大写英文转换成小写英文\n2、返回值：转换之后的新字符串\n3、原字符串未发生改变\n\nvar str = 'ABCDEF';\nconsole.log(str.toLowerCase());           //结果  abcdef\nconsole.log(str);                         //结果  ABCDEF\n")])])]),a("h2",{attrs:{id:"trim-ie不支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trim-ie不支持"}},[s._v("#")]),s._v(" trim()   IE不支持")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1、去除前后空格\n2、返回值：去除空格后的新字符串\n3、原字符串未发生变化\n\nvar str = ' abc ';                        //5个字符\nconsole.log(str.length);\nconsole.log(str.trim());                  //abc\nconsole.log(str);                         //abc\n")])])]),a("h2",{attrs:{id:"split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[s._v("#")]),s._v(" split()")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('1、把字符串转成数组\n2、参数：分隔符（字符串中的某一字符或多个字符）\n3、原字符串未发生改变\n\nvar str = "I#am#Mr#TianMr";\nconsole.log(str.split("#"));       //结果["I" , "am"  , "Mr"  , "Tian"]\nconsole.log(str);                  //结果 I#am#Mr#TianMr\nconsole.log(str.split("Mr"));      //结果["I#am#" , "#Tian" , ""]\n')])])]),a("h2",{attrs:{id:"substr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substr"}},[s._v("#")]),s._v(" substr()")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1、截取字符串\n2、只有参数一：从开始截取到最后\n    参数一：开始截取的位置(包含)\n    参数二：截取的个数(长度)\n3、返回值：截取的新字符串\n\nvar str = '123abcdef';\nconsole.log(str.substr(2));        //结果：3abcdef\nconsole.log(str.substr(2,4));      //结果：3abc\nconsole.log(str);                  //结果：123abcdef\n")])])]),a("h2",{attrs:{id:"substring-slice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substring-slice"}},[s._v("#")]),s._v(" substring()    ---slice")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1、截取字符串\n2、只有参数一：从开始截取到最后\n    参数一：开始截取的位置(包含)\n    参数二：结束的位置(不包含)\n3、返回值：截取的新字符串\n\nvar str = '123abcdef';\nconsole.log(str.substring(2));     //结果：3abcdef\nconsole.log(str.substring(2,4));   //结果：3a\nconsole.log(str);                  //结果：123abcdef\n")])])]),a("h2",{attrs:{id:"汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#汇总"}},[s._v("#")]),s._v(" 汇总")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("charAt(i);              指定位置字符\ncharCodeAt();           指定位置字符的ASCII编码\nString.fromCharCode();  通过ASCII编码找到对应字符\nindexOf();              从前向后查找指定字符的下标\nlastIndexOf();          从后向前查找指定字符的下标\nreplace();              替换字符\ntoUpperCase();          小写转大写\ntoLowerCase();          大写转小写\ntrim();                 去除前后空格\nsplit();                字符串转数组\nsubstr();               截取字符串：参数2，截取个数\nsubstring();            截取字符串：参数2，结束位置\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);