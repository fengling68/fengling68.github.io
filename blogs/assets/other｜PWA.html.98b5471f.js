import{_ as p,r as o,o as e,c,a as n,b as a,d as t,f as l}from"./app.aafb335d.js";const i={},u=l(`<h1 id="pwa-渐进式-web-应用" tabindex="-1"><a class="header-anchor" href="#pwa-渐进式-web-应用" aria-hidden="true">#</a> PWA 渐进式 Web 应用</h1><h2 id="pwa简介" tabindex="-1"><a class="header-anchor" href="#pwa简介" aria-hidden="true">#</a> PWA简介</h2><h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3><ul><li>PWA（Progressive web apps，渐进式Web 应用）</li><li>MDN 解释：运用现代的 Web API 以及传统的渐进式增强策略来创建跨平台 Web 应用程序。这些应用无处不在、功能丰富，使其具有与原生应用相同的用户体验优势。</li></ul><h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h3><ul><li>可被发现</li><li>易安装</li><li>可链接</li><li>独立于网络</li><li>渐进式</li><li>可重用</li><li>响应性</li><li>安全的</li></ul><h3 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h3><ul><li>需要三方库才能调用底层硬件（如摄像头）；</li><li>技术不普及，部分手机屏蔽PWA；</li></ul><h3 id="架构模型" tabindex="-1"><a class="header-anchor" href="#架构模型" aria-hidden="true">#</a> 架构模型</h3><ul><li>App Shell</li></ul><h3 id="核心功能" tabindex="-1"><a class="header-anchor" href="#核心功能" aria-hidden="true">#</a> 核心功能</h3><ul><li>Service Worker</li><li>Web App Manifest</li><li>Cache API 缓存 <code>待补充</code></li><li>Push&amp;Notification 推送与通知 <code>待补充</code></li><li>Background Sync 后台同步（数据更新） <code>待补充</code></li><li>响应式设计 <code>待补充</code></li></ul><h2 id="service-worker" tabindex="-1"><a class="header-anchor" href="#service-worker" aria-hidden="true">#</a> Service Worker</h2><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h3><ul><li>基于HTTPS 环境</li><li>是一个独立的 worker 线程</li><li>可拦截HTTP请求和响应，可缓存文件</li><li>能向客户端推送消息</li><li>不能直接操作 DOM</li><li>异步实现，内部大都是通过 Promise 实现</li></ul><h3 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h3><ul><li>注册 -&gt; 安装 -&gt; 激活 -&gt; 废弃</li><li>installing -&gt; installed -&gt; activating -&gt; activated -&gt; redundant</li></ul><h3 id="注册" tabindex="-1"><a class="header-anchor" href="#注册" aria-hidden="true">#</a> 注册</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 注意上线后路径和scope</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;serviceWorker&#39;</span> <span class="token keyword">in</span> navigator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    navigator<span class="token punctuation">.</span>serviceWorker<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;/sw.js&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">scope</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">registration</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ServiceWorker registration successful with scope: &#39;</span><span class="token punctuation">,</span> registration<span class="token punctuation">.</span>scope<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ServiceWorker registration failed: &#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="web-app-manifest" tabindex="-1"><a class="header-anchor" href="#web-app-manifest" aria-hidden="true">#</a> Web App Manifest</h2><h3 id="创建-manifest-json-文件" tabindex="-1"><a class="header-anchor" href="#创建-manifest-json-文件" aria-hidden="true">#</a> 创建 manifest.json 文件</h3><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token comment">// 一份简单示例</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;应用名称&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;short_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;应用展示名称&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;应用详细描述&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;lang&quot;</span><span class="token operator">:</span> <span class="token string">&quot;语言&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;scope&quot;</span>：<span class="token string">&quot;应用模式下路径范围，超出以浏览器方式显示&quot;</span>
  <span class="token property">&quot;start_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/service-worker/index.html&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;theme_color&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#fff&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;background_color&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#fff&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;orientation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;portrait&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;prefer_related_applications&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;icons&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/img/logo-96x96.png&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sizes&quot;</span><span class="token operator">:</span> <span class="token string">&quot;96x96&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/png&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/img/logo-144x144.png&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sizes&quot;</span><span class="token operator">:</span> <span class="token string">&quot;144x144&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/png&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;display&quot;</span><span class="token operator">:</span> <span class="token string">&quot;standalone&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="引入-manifest-json-配置" tabindex="-1"><a class="header-anchor" href="#引入-manifest-json-配置" aria-hidden="true">#</a> 引入 manifest.json 配置</h3><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manifest<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manifest.json<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="workbox" tabindex="-1"><a class="header-anchor" href="#workbox" aria-hidden="true">#</a> Workbox</h2><h3 id="缓存策略" tabindex="-1"><a class="header-anchor" href="#缓存策略" aria-hidden="true">#</a> 缓存策略</h3><h4 id="_1、network-first-网络优先" tabindex="-1"><a class="header-anchor" href="#_1、network-first-网络优先" aria-hidden="true">#</a> 1、Network First（网络优先 ）</h4><p><img src="https://fengling68.github.io/imgbed/images/1579091065-822x408.png" alt="image-20200115113751675"></p><h4 id="_2、network-only" tabindex="-1"><a class="header-anchor" href="#_2、network-only" aria-hidden="true">#</a> 2、Network Only</h4><p><img src="https://fengling68.github.io/imgbed/images/1579091065-826x300.png" alt="image-20200115114058049"></p><h4 id="_3、cache-first-缓存优先" tabindex="-1"><a class="header-anchor" href="#_3、cache-first-缓存优先" aria-hidden="true">#</a> 3、Cache First（缓存优先）</h4><p><img src="https://fengling68.github.io/imgbed/images/1579091065-816x412.png" alt="image-20200115113702074"></p><h4 id="_4、cache-only" tabindex="-1"><a class="header-anchor" href="#_4、cache-only" aria-hidden="true">#</a> 4、Cache Only</h4><p><img src="https://fengling68.github.io/imgbed/images/1579091065-822x296.png" alt="image-20200115114140560"></p><h4 id="_5、stale-while-revalidate-竞速模式" tabindex="-1"><a class="header-anchor" href="#_5、stale-while-revalidate-竞速模式" aria-hidden="true">#</a> 5、Stale-While-Revalidate（竞速模式）</h4><p><img src="https://fengling68.github.io/imgbed/images/1579091065-822x412.png" alt="image-20200115114338104"></p><h3 id="sw-js-示例" tabindex="-1"><a class="header-anchor" href="#sw-js-示例" aria-hidden="true">#</a> sw.js 示例</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * sw.js  一份完整的Workbox示例
 */</span>

<span class="token comment">// 引入 workbox-sw.js 文件</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">importScripts</span><span class="token punctuation">(</span><span class="token string">&#39;https://storage.googleapis.com/workbox-cdn/releases/4.3.1/workbox-sw.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// debug：true=调试版本，false=生产版本</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">debug</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> precacheController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>precaching<span class="token punctuation">.</span>PrecacheController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

precacheController<span class="token punctuation">.</span><span class="token function">addToCacheList</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;./index.html&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;install&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span>precacheController<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;activate&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span>precacheController<span class="token punctuation">.</span><span class="token function">activate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">const</span> cacheName <span class="token operator">=</span> <span class="token string">&#39;fengling&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 设置缓存信息</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>core<span class="token punctuation">.</span><span class="token function">setCacheNameDetails</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">prefix</span><span class="token operator">:</span> cacheName<span class="token punctuation">,</span>
  <span class="token literal-property property">suffix</span><span class="token operator">:</span> <span class="token string">&#39;v1&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">precache</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">custom-precache-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cacheName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token comment">// 预缓存名称</span>
  <span class="token literal-property property">runtime</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">custom-runtime-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cacheName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// 运行缓存名称</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// html 文档: 网络优先，同时后台更新后下次打开页面才会被页面使用</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>routing<span class="token punctuation">.</span><span class="token function">registerRoute</span><span class="token punctuation">(</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*\\.html</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>strategies<span class="token punctuation">.</span><span class="token function">networkFirst</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">cacheName</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cacheName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:html</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// JS 文件: 网络优先，同时后台更新后下次打开页面才会被页面使用</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>routing<span class="token punctuation">.</span><span class="token function">registerRoute</span><span class="token punctuation">(</span>
  <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;.*.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>strategies<span class="token punctuation">.</span><span class="token function">networkFirst</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">cacheName</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cacheName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:js</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// CSS 请求: 竞速模式</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>routing<span class="token punctuation">.</span><span class="token function">registerRoute</span><span class="token punctuation">(</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*\\.css</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>strategies<span class="token punctuation">.</span><span class="token function">staleWhileRevalidate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">cacheName</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cacheName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:css</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// img 请求: 缓存优先</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>routing<span class="token punctuation">.</span><span class="token function">registerRoute</span><span class="token punctuation">(</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*\\.(?:png|jpg|jpeg|svg|gif|ico)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>strategies<span class="token punctuation">.</span><span class="token function">cacheFirst</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">cacheName</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cacheName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:image</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// 返回状态0-200符合缓存策略</span>
      <span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>cacheableResponse<span class="token punctuation">.</span>Plugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">statuses</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// 设置缓存限制</span>
      <span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>expiration<span class="token punctuation">.</span>Plugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">maxEntries</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
        <span class="token literal-property property">maxAgeSeconds</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// font 请求: 缓存优先</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>routing<span class="token punctuation">.</span><span class="token function">registerRoute</span><span class="token punctuation">(</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*\\.(?:ttf|woff|eot|otf|fon|font|ttc|woff)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>strategies<span class="token punctuation">.</span><span class="token function">cacheFirst</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">cacheName</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cacheName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:font</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// 返回状态0-200符合缓存策略</span>
      <span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>cacheableResponse<span class="token punctuation">.</span>Plugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">statuses</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// 设置缓存限制</span>
      <span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>workbox<span class="token punctuation">.</span>expiration<span class="token punctuation">.</span>Plugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">maxEntries</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
        <span class="token literal-property property">maxAgeSeconds</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="参考-推荐网站" tabindex="-1"><a class="header-anchor" href="#参考-推荐网站" aria-hidden="true">#</a> 参考&amp;推荐网站</h2>`,39),r={href:"https://developers.google.com/web",target:"_blank",rel:"noopener noreferrer"},k={href:"https://lavas.baidu.com/pwa/why-is-progressive",target:"_blank",rel:"noopener noreferrer"},h={href:"https://developers.google.com/web/tools/workbox/guides/get-started",target:"_blank",rel:"noopener noreferrer"},d={href:"https://zoumiaojiang.com/article/amazing-workbox-3/#-5",target:"_blank",rel:"noopener noreferrer"},g={href:"https://developers.google.cn/web/fundamentals/architecture/app-shell",target:"_blank",rel:"noopener noreferrer"},m={href:"https://developer.mozilla.org/en-US/docs/Web/Manifest",target:"_blank",rel:"noopener noreferrer"},f={href:"https://appsco.pe/category/travel",target:"_blank",rel:"noopener noreferrer"};function b(x,w){const s=o("ExternalLinkIcon");return e(),c("div",null,[u,n("p",null,[n("a",r,[a("Google Developers"),t(s)])]),n("p",null,[n("a",k,[a("PWA 中文文档"),t(s)])]),n("p",null,[n("a",h,[a("Workbox 指南"),t(s)])]),n("p",null,[n("a",d,[a("workbox 3.0"),t(s)])]),n("p",null,[n("a",g,[a("App Shell "),t(s)])]),n("p",null,[n("a",m,[a("Manifest"),t(s)])]),n("p",null,[n("a",f,[a("AppScope 一个pwa应用程序汇总网站"),t(s)])])])}const q=p(i,[["render",b],["__file","other｜PWA.html.vue"]]);export{q as default};
