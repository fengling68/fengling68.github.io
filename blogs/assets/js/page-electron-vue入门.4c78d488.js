(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{623:function(n,e,a){"use strict";a.r(e);var r=a(1),s=Object(r.a)({},(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"electron-vue入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#electron-vue入门"}},[n._v("#")]),n._v(" electron-vue入门")]),n._v(" "),a("h2",{attrs:{id:"一、安装和启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、安装和启动"}},[n._v("#")]),n._v(" 一、安装和启动")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("# 安装 vue-cli和脚手架样板代码\nnpm install -g vue-cli\nvue init simulatedgreg/electron-vue electronDemo\n\n# 安装依赖并运行你的程序\ncd electronDemo\nnpm install  # 或者yarn\nnpm run dev  # 或者yarn run dev\n")])])]),a("h2",{attrs:{id:"二、打包-打包文件在build目录下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、打包-打包文件在build目录下"}},[n._v("#")]),n._v(" 二、打包（打包文件在build目录下）")]),n._v(" "),a("blockquote",[a("p",[n._v("(1)使用electron-packager打包")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("# 针对所有或各平台打包\nall  ：npm run build\nmacOS：npm run build:darwin\nmas  ：npm run build:mas\nlinux：npm run build:linux\nwin32：npm run build:win32\nweb  ：npm run build:web\n\n# 清除build目录下的打包文件\nnpm run build:clean\n")])])]),a("blockquote",[a("p",[n._v("(2)使用electron-builder打包")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("# 针对所有平台打包\nnpm run build\n# 生成简单的可执行文件\nnpm run build:dir\n# 生成可在浏览器运行的web应用\nnpm run build:web\n\n# 清除build目录下的打包文件\nnpm run build:clean\n")])])]),a("h2",{attrs:{id:"三、开发出现的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、开发出现的问题"}},[n._v("#")]),n._v(" 三、开发出现的问题")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("0、其他\n    (1)vue中使用<webview>标签打开一个url\n    (2)建立主窗口：new BrowserWindow\n    (3)在父主(父)窗口中创建子窗口：new BrowserView \n    \n1、在electron-vue中使用vuex，无法改变vuex状态\n    解决：在src/main/index.js主进程加上：import '../renderer/store';\n\n2、设置跨域\n    解决：在在src/main/index.js主进程new BrowserWindow内加上\n    webPreferences: {\n      webSecurity: false,\n    },\n    \n3、添加通知\n    new Notification('添加成功');\n")])])]),a("h2",{attrs:{id:"四、main进程和web进程的通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、main进程和web进程的通信"}},[n._v("#")]),n._v(" 四、main进程和web进程的通信")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("/********** main ***********/\nimport { ipcMain } from 'electron'\n\n// 接收web发送的信息\nipcMain.on('web-send-message-to-main', (event, arg) => {\n  console.log(`mian-accept: ${arg}`);\n  // 向web发送信息\n  event.sender.send('main-send-message-to-web', 'main-to-web');\n});\n\n/********** web（.vue） ***********/\n// import electron from 'electron';\n// const { ipcRenderer } = electron;\nimport { ipcRenderer } from 'electron';\n\n// 接收main发送的信息\nipcRenderer.on('main-send-message-to-web', (event, arg) => {\n  console.log(`web-accept: ${arg}`);\n});\n\n// 向main发送信息\nipcRenderer.send('web-send-message-to-main', 'web-to-main');\n// ipcRenderer.sendSync('web-send-message-to-main', 'web-to-main');\n")])])]),a("h2",{attrs:{id:"五️、dialog对话框"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五️、dialog对话框"}},[n._v("#")]),n._v(" 五️、dialog对话框")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("// 在main中引入\nimport { dialog } from 'electron';\n\n// 在vue组件中引入\n// eslint配置 'import/no-extraneous-dependencies': 0,\nimport electron from 'electron';\nconst { dialog } = electron.remote;\n\n// 打开对话框\ndialog.showOpenDialog([{\n  title: '打开文件',\n  message: '打卡打开打开',\n  filters: [\n    { name: 'Images', extensions: ['jpg', 'png', 'gif'] },\n    { name: 'Movies', extensions: ['mkv', 'avi', 'mp4'] },\n    { name: 'Custom File Type', extensions: ['as'] },\n    { name: 'All Files', extensions: ['*'] },\n  ],\n  properties: {\n    openFile: true,\n    // ...\n  },\n}], (filePaths) => {\n  console.log(filePaths);\n});\n\n// 保存对话框\ndialog.showSaveDialog((filename) => {\n  console.log(filename);\n});\n\n// 消息对话框\ndialog.showMessageBox({\n  title: '信息对话框',\n  message: '北方有佳人，绝世而独立。',\n  detail: '这是一首著名的诗',\n  type: 'info', // \"none\", \"info\", \"error\", \"question\", \"warning\"\n  buttons: ['确认', '取消'],\n}, (resIndex) => {\n  if (resIndex === 0) {\n    console.log('点击了确认');\n  } else if (resIndex === 1) {\n    console.log('点击了取消');\n  }\n});\n\n// 错误弹窗\ndialog.showErrorBox('错误弹窗', '这是一个错误弹窗');\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);