import{_ as n,o as s,c as a,f as t}from"./app.c94871ea.js";const p={},o=t(`<h1 id="\u75312-9\u5B57\u7B26\u4E32\u8FD4\u56DE\u5B57\u6BCD\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#\u75312-9\u5B57\u7B26\u4E32\u8FD4\u56DE\u5B57\u6BCD\u7EC4\u5408" aria-hidden="true">#</a> \u75312-9\u5B57\u7B26\u4E32\u8FD4\u56DE\u5B57\u6BCD\u7EC4\u5408</h1><blockquote><p><span style="color:#3eaf7c;">\u95EE\u9898\u63CF\u8FF0\uFF1A</span> \u7ED9\u5B9A\u75312-9\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\uFF0C\u8FD4\u56DE\u6240\u6709\u5B57\u6BCD\u7EC4\u5408\uFF0C2-9\u7684\u6620\u5C04\u5173\u7CFB\u53EF\u53C2\u8003\u624B\u673A\u952E\u76D8\u3002</p><p><span style="color:#3eaf7c;">\u793A\u4F8B\u8F93\u5165\uFF1A</span> \u201C23\u201D</p><p><span style="color:#3eaf7c;">\u793A\u4F8B\u8F93\u51FA\uFF1A</span> [&quot;ad&quot;, &quot;ae&quot;, &quot;af&quot;, &quot;bd&quot;, &quot;be&quot;, &quot;bf&quot;, &quot;cd&quot;, &quot;ce&quot;, &quot;cf&quot;]</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">combine</span><span class="token punctuation">(</span><span class="token parameter">strA<span class="token punctuation">,</span> strB</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> combineArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strA<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> strB<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        combineArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>strA<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>strB<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> combineArr<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> letters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;def&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ghi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mno&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pqrs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tuv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;wxyz&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> <span class="token function">combine</span><span class="token punctuation">(</span>letters<span class="token punctuation">[</span>str<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> letters<span class="token punctuation">[</span>str<span class="token punctuation">[</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!==</span> str<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> <span class="token function">combine</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> letters<span class="token punctuation">[</span>str<span class="token punctuation">[</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token string">&#39;2345&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,3),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(p,[["render",e],["__file","20201103\uFF5C\u75312-9\u5B57\u7B26\u4E32\u8FD4\u56DE\u5B57\u6BCD\u7EC4\u5408.html.vue"]]);export{i as default};
