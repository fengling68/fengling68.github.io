(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{550:function(n,e,a){"use strict";a.r(e);var t=a(1),s=Object(t.a)({},(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"css基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css基础"}},[n._v("#")]),n._v(" CSS基础")]),n._v(" "),a("h2",{attrs:{id:"什么是css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是css"}},[n._v("#")]),n._v(" 什么是CSS？")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('CSS：Cascading Style Sheet   层叠样式表、级联样式表、样式表\n\n1、作用\n修改页面中元素的显示样式，实现内容与表现分离，提高代码的可重用性和可维护性。\n\n2、三种引入方式\n    (1)内联样式  (在元素中声明，只对该元素有效)\n        <h1 style="background-color:red;"></h1>\n\n    (2)内部样式表 样式规则由选择器和样式声明组成。(定义在head中，只对当前页面有效，可以实现代码重用)\n        <stytle>\n              p{                      选择器：当前样式规则名；哪些元素可以使用当前规则\n                width: 60px;        样式声明：{}，多个属性值\n                heidht:60px;\n                position:absolute;\n              }\n        </stytle>\n\n    (3)外部样式表  (将样式定义在一个外部CSS文件中，在head中引入外部样式表)\n        <head>         rel:规定当前文件与被链接文档之间的关系。\n          <link rel="stylesheet" type="text/css" href="url"/>\n        </head>\n')])])]),a("h2",{attrs:{id:"css样式表的特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css样式表的特征"}},[n._v("#")]),n._v(" CSS样式表的特征")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("1、继承性\n\n    子元素可以继承父元素的样式，在CSS中以text-,font-,line-开头的属性都是可以继承的。\n    特例1：a标签颜色不能继承（默认蓝色），必须对a标签本身进行设置。\n    特例2：h标签的字体大小不能修改，必须对h标签本身进行设置。\n\n2、层叠性\n\n    层叠性是浏览器处理冲突的一个能力，一个选择器可以被重复定义，在多个不同的定义中，不同的属性可以层叠到一起，如果属性重复，以后定义的为准\n\n    div{color:red;}  div{width:60px;}   层叠\n    div{color:red;} div{color:green;}   层叠，颜色绿色\n\n3、优先级(很重要)：样式冲突时，按优先级使用\n\n    优先1：浏览器缺省设置(最低，浏览器默认样式)\n    优先2：外部样式表或内部样式表——就近原则(link和style的前后顺序)\n    优先3：内联样式(高于内部样式表和外部样式表)\n    优先4：！important可以手动调整样式属性的优先级（最高）\n           div{color:red !important;}\n")])])]),a("h2",{attrs:{id:"css基础选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css基础选择器"}},[n._v("#")]),n._v(" CSS基础选择器")]),n._v(" "),a("p",[n._v("1、通用选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("匹配页面中所有的元素，定义当前网页中最基本的显示样式，如字体、大小\n*{属性:值;}\n")])])]),a("p",[n._v("2、元素选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("更改某个元素的默认显示样式\ndiv{属性:值;}\n")])])]),a("p",[n._v("3、类选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('通过标签的class属性来引用定义好的类名，可以将多个类选择器应用于同一个元素。多个类名用空格隔开，不能以数字开头。\n\n.red{color:red;}   p.red{color:red;}      div.red{color:red;}\n.green{background-color:green;}\n<div class="red">倩女幽魂</div>\n<p class="red green">张国荣<p>     //可以给同一个标签设多个类名\n')])])]),a("p",[n._v("4、id选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('t通过标签的ID属性值进行引用。一个元素只能有一个ID，同一个ID只能出现一次。\n`#red{color:red;}` `<div id="red">倩女幽魂</div>`\n')])])]),a("p",[n._v("5、选择器分组")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("可以选择多个元素。\ndiv,#red,.green{属性:值;}\n")])])]),a("p",[n._v("6、后代选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("通过元素的位置关系来匹配到元素并用空格隔开。\ndiv p{属性:值；}     div里的所有p元素\n")])])]),a("p",[n._v("7、子代选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("两元素之间只能是父子关系。\n选择器1>选择器2\ndiv>p>span{属性:值;}\n")])])]),a("p",[n._v("8、相邻兄弟选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("可选择紧接在另一元素后的元素，且二者有相同的父元素。\n选择器1+选择器2\ndiv+p{属性:值;}\n")])])]),a("p",[n._v("9、属性选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("根据元素的属性及属性值来选择元素的。\n元素[属性]{属性:值;}\n`input[type]{属性:值;}  拥有type属性的input元素` \n\n[attribute] 用于选取带有指定属性的元素。\n[attribute=value] 用于选取带有指定属性和值的元素。\n[attribute~=value] 用于选取属性值中包含指定词汇的元素。\n[attribute|=value] 用于选取带有以指定值开头的属性值的元素，该值必须是整个单词。\n[attribute^=value] 匹配属性值以指定值开头的每个元素。\n[attribute$=value] 匹配属性值以指定值结尾的每个元素。\n[attribute*=value] 匹配属性值中包含指定值的每个元素。\n")])])]),a("p",[n._v("10、伪类选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('(1)链接伪类\n\n    :link,适用于尚未访问的链接\n    :visited,访问过后的链接\n\n链接伪类a标签访问状态\n\n    未被访问    a:link{color:red;}\n    鼠标悬停    a:visited{color:green;}\n    激活状态    a:hover{color:purple;}\n    访问后状态  a:active{color:black;}\n\n(2)动态伪类\n\n    :hover,适用于鼠标悬停在元素时\n    :active,元素被激活时（按下还没释放）\n    :focus,元素获取焦点时（多数用于文本框，密码框等表单元素）\n\n(3)目标伪类\n\n    :target\n\n(4)元素状态伪类\n\n(5)结构伪类(常用)\n\n    :first-child: 选择第一个子元素\n    :last-child : 选择最后一个子元素\n\n    (.div:first-child)与(.div :first-child)中间有无空格结果不同\n\n(6)伪元素选择器\n\n    ：first-line:为某个元素的第一行文字使用样式\n    ：first-letter:为某个元素中的文字的首字母或第一个字使用样式  div:first-letter{color:red;}\n    ：before:在某个元素之前插入一些内容  div:before{content:"小明";}\n    ：after: 在某个元素之后插入一些内容  p:after{content:"小红";}\n\n(7)否定伪类\n')])])]),a("p",[n._v("11、交集选择器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("ul li.first{}     li标签里面类名为first的元素\ndiv.first{}\n")])])]),a("h2",{attrs:{id:"权值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权值"}},[n._v("#")]),n._v(" 权值")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("!important(1000) > id选择器优先级(100) > 类选择器优先级(10) > 元素选择器优先级(1)\n#red .green>p>span   权值：100+10+1+1=112\n\n权值相同，就近原则；权值不同，谁权值大谁优先。\n对同一个元素定义样式时，以权值高的为准。\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);