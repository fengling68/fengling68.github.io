import{_ as n,o as s,c as a,f as t}from"./app.ece27ecb.js";const p={},o=t(`<h1 id="\u5224\u65AD\u5143\u7D20\u662F\u5426\u5728\u89C6\u53E3\u5185" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u5143\u7D20\u662F\u5426\u5728\u89C6\u53E3\u5185" aria-hidden="true">#</a> \u5224\u65AD\u5143\u7D20\u662F\u5426\u5728\u89C6\u53E3\u5185</h1><h2 id="element-is-in-view-js" tabindex="-1"><a class="header-anchor" href="#element-is-in-view-js" aria-hidden="true">#</a> element-is-in-view.js</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ElementIsInView</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>params<span class="token punctuation">.</span>element<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token punctuation">{</span>
      element<span class="token punctuation">,</span>
      onViewTopHide<span class="token punctuation">,</span>
      onViewBottomHide<span class="token punctuation">,</span>
      onViewCenterShow<span class="token punctuation">,</span>
      onViewTopIng<span class="token punctuation">,</span>
      onViewBottomIng<span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> params<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>element <span class="token operator">=</span> element <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onViewTopHide <span class="token operator">=</span> onViewTopHide <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u5728\u89C6\u53E3\u4E4B\u4E0A</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onViewBottomHide <span class="token operator">=</span> onViewBottomHide <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u5728\u89C6\u53E3\u4E4B\u4E0B</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onViewCenterShow <span class="token operator">=</span> onViewCenterShow <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u5728\u89C6\u53E3\u4E2D\u95F4</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onViewTopIng <span class="token operator">=</span> onViewTopIng <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u5728\u89C6\u53E3\u4E0A\u65B9\u51FA\u73B0\u6216\u9690\u85CF\u4E2D</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onViewBottomIng <span class="token operator">=</span> onViewBottomIng <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u5728\u89C6\u53E3\u4E0B\u65B9\u51FA\u73B0\u6216\u9690\u85CF\u4E2D</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>windowHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight
      <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight
      <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>listenerFunction <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scrollEventListen</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u4E8E\u9500\u6BC1</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listenerFunction<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getBoundingRect</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> top <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientTop <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> left <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientLeft <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">top</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>top <span class="token operator">-</span> top<span class="token punctuation">,</span>
      <span class="token literal-property property">bottom</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>bottom <span class="token operator">-</span> top<span class="token punctuation">,</span>
      <span class="token literal-property property">left</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>left <span class="token operator">-</span> left<span class="token punctuation">,</span>
      <span class="token literal-property property">right</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>right <span class="token operator">-</span> left<span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>height
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">scrollEventListen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> elementBounding <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBoundingRect</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> top<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> elementBounding<span class="token punctuation">;</span>

    <span class="token comment">// \u5728\u89C6\u53E3\u4E4B\u4E0A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bottom <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onViewTopHide <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onViewTopHide <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onViewTopHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5728\u89C6\u53E3\u4E4B\u4E0B</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>windowHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onViewBottomHide <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onViewBottomHide <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onViewBottomHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6B63\u5728\u89C6\u53E3\u4E2D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> top <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>windowHeight <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>windowHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onViewCenterShow <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onViewCenterShow <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onViewCenterShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5728\u89C6\u53E3\u4E0A\u65B9\u51FA\u73B0\u6216\u9690\u85CF\u4E2D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&lt;=</span> height <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onViewTopIng <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onViewTopIng <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onViewTopIng</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5728\u89C6\u53E3\u4E0B\u65B9\u51FA\u73B0\u6216\u9690\u85CF\u4E2D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>windowHeight <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>windowHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onViewBottomIng <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onViewBottomIng <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onViewBottomIng</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listenerFunction<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> demo</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> ElementIsInView <span class="token keyword">from</span> <span class="token string">&#39;element-is-in-view&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> eleIsInView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ElementIsInView</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   <span class="token literal-property property">elementId</span><span class="token operator">:</span> <span class="token string">&#39;#banner&#39;</span><span class="token punctuation">,</span>
   <span class="token function-variable function">onViewTopHide</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token function-variable function">onViewBottomHide</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token function-variable function">onViewTopIng</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token function-variable function">onViewBottomIng</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token function-variable function">onViewCenterShow</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     eleIsInView<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,5),e=[o];function c(l,u){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","element-is-in-view.html.vue"]]);export{i as default};
