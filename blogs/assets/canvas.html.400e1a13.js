import{_ as n,o as s,c as a,f as p}from"./app.bb38b1d2.js";const t={},o=p(`<h1 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> canvas</h1><h2 id="获取设备分辨率" tabindex="-1"><a class="header-anchor" href="#获取设备分辨率" aria-hidden="true">#</a> 获取设备分辨率</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">getPixelRatio</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> backingStore <span class="token operator">=</span> context<span class="token punctuation">.</span>backingStorePixelRatio 
  <span class="token operator">||</span> context<span class="token punctuation">.</span>webkitBackingStorePixelRatio 
  <span class="token operator">||</span> context<span class="token punctuation">.</span>mozBackingStorePixelRatio 
  <span class="token operator">||</span> context<span class="token punctuation">.</span>msBackingStorePixelRatio 
  <span class="token operator">||</span> context<span class="token punctuation">.</span>oBackingStorePixelRatio 
  <span class="token operator">||</span> context<span class="token punctuation">.</span>backingStorePixelRatio <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>devicePixelRatio <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> backingStore<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="canvas-设置并画图" tabindex="-1"><a class="header-anchor" href="#canvas-设置并画图" aria-hidden="true">#</a> canvas 设置并画图</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">drawCanvas</span><span class="token punctuation">(</span><span class="token parameter">imgs</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> ratio <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPixelRatio</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> cwidth<span class="token punctuation">;</span>
  canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> cheight<span class="token punctuation">;</span>
  canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token operator">=</span>cwidth<span class="token operator">+</span><span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
  canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> cheight<span class="token operator">+</span><span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
  <span class="token comment">// todo ...</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="canvas-画直线" tabindex="-1"><a class="header-anchor" href="#canvas-画直线" aria-hidden="true">#</a> canvas 画直线</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">&#39;#ffffff&#39;</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="canvas-画圆形图片" tabindex="-1"><a class="header-anchor" href="#canvas-画圆形图片" aria-hidden="true">#</a> canvas 画圆形图片</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token operator">...</span>imagesArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>roundParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">clip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token operator">...</span>imagesArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="canvas-设置文字阴影" tabindex="-1"><a class="header-anchor" href="#canvas-设置文字阴影" aria-hidden="true">#</a> canvas 设置文字阴影</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 加阴影</span>
context<span class="token punctuation">.</span>shadowColor <span class="token operator">=</span> <span class="token string">&#39;rgba(183, 67, 0, 0.75)&#39;</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>shadowOffsetX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>shadowOffsetY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>shadowBlur <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
<span class="token comment">// 不加阴影</span>
context<span class="token punctuation">.</span>shadowColor <span class="token operator">=</span> <span class="token string">&#39;rgba(183, 67, 0, 0)&#39;</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>shadowBlur <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="canvas-测量文字宽度" tabindex="-1"><a class="header-anchor" href="#canvas-测量文字宽度" aria-hidden="true">#</a> canvas 测量文字宽度</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span><span class="token function">measureText</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span><span class="token punctuation">.</span>width
</code></pre></div><h2 id="canvas-实现文字渐变色" tabindex="-1"><a class="header-anchor" href="#canvas-实现文字渐变色" aria-hidden="true">#</a> canvas 实现文字渐变色</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> grd <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">createLinearGradient</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> left<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>
grd<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token string">&#39;rgb(155, 0, 0)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
grd<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;rgb(0, 155, 0)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> grd<span class="token punctuation">;</span>
</code></pre></div><h2 id="canvas-给图片换皮肤色" tabindex="-1"><a class="header-anchor" href="#canvas-给图片换皮肤色" aria-hidden="true">#</a> canvas 给图片换皮肤色</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: canvas皮肤换色
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">img</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">colorNewArr</span> [&#39;50, 50, 50&#39;]
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">colorOriginArr</span> [&#39;150, 150, 150&#39;]
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token function">canvasChangeColor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> colorNewArr<span class="token punctuation">,</span> colorOriginArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> width<span class="token punctuation">,</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> img<span class="token punctuation">;</span>
  <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>
  canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
  <span class="token comment">// 将源图片画到画布上</span>
  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 获取画布的像素信息</span>
  <span class="token keyword">const</span> imageData <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getImageData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> colorData <span class="token punctuation">}</span> <span class="token operator">=</span> imageData<span class="token punctuation">;</span>
  <span class="token comment">// 循环像素点改变颜色【1像素=4通道】【共x像素：宽*高】【共x通道：宽*高*4】</span>
  <span class="token keyword">const</span> pixelLength <span class="token operator">=</span> width <span class="token operator">*</span> height<span class="token punctuation">;</span>
  <span class="token keyword">const</span> limit <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 换色区间阈值</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pixelLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>cr<span class="token punctuation">,</span> cg<span class="token punctuation">,</span> cb<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
      colorData<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      colorData<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      colorData<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> colorOriginArr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token parameter">color</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">+</span>color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> limit <span class="token operator">&lt;</span> cr
        <span class="token operator">&amp;&amp;</span> cr <span class="token operator">&lt;</span> <span class="token operator">+</span>color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> limit
        <span class="token operator">&amp;&amp;</span> <span class="token operator">+</span>color<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> limit <span class="token operator">&lt;</span> cg
        <span class="token operator">&amp;&amp;</span> cg <span class="token operator">&lt;</span> <span class="token operator">+</span>color<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> limit
        <span class="token operator">&amp;&amp;</span> <span class="token operator">+</span>color<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> limit <span class="token operator">&lt;</span> cb
        <span class="token operator">&amp;&amp;</span> cb <span class="token operator">&lt;</span> <span class="token operator">+</span>color<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> limit
    <span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> colorNewArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">[</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> colorNewArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
      colorData<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">+</span>r<span class="token punctuation">;</span>
      colorData<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">+</span>g<span class="token punctuation">;</span>
      colorData<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">+</span>b<span class="token punctuation">;</span>
      colorData<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">+</span><span class="token number">255</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 将修改后代码复制到画布</span>
  ctx<span class="token punctuation">.</span><span class="token function">putImageData</span><span class="token punctuation">(</span>imageData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 输出base64图</span>
  <span class="token keyword">return</span> canvas<span class="token punctuation">.</span><span class="token function">toDataUrl</span><span class="token punctuation">(</span><span class="token string">&#39;image/png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="canvas-设置背景透明" tabindex="-1"><a class="header-anchor" href="#canvas-设置背景透明" aria-hidden="true">#</a> canvas 设置背景透明</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#stage&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;webgl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>globalAlpha <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="加载图片" tabindex="-1"><a class="header-anchor" href="#加载图片" aria-hidden="true">#</a> 加载图片</h2><p><span style="color:#3eaf7c;">问题：</span>加载图片资源失败问题（图片是异步加载的，不需要等待）。<br><span style="color:#3eaf7c;">原因：</span>网速快或有缓存时，以至于没有运行到onload的时候，图片 img.src 已经被加载完毕了。<br><span style="color:#3eaf7c;">解决：</span>因此，可以先告诉浏览器如何处理这张图片即先 img.onload 监听事件，然后在给 img.src 添加链接来源。 一般情况下，可以用complete来判断图片是否加载完毕，complete 根据图片是否显示过来判断，只有加载的图片显示后，complete属性值为true ，否则是false ，和是否加载过，是否缓存没有关系！<br><span style="color:#3eaf7c;">PS：</span>JS、css、图片去除缓存方法，可添加随机字符串或时间戳。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">loadImages</span><span class="token punctuation">(</span><span class="token parameter">imgArr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> times <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> imgArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 解决跨域问题，注意区分本地ip和域名</span>
    <span class="token comment">// ios10系统生成canvas图片时会出错，base64不应设置跨域</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;data:image/png;&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      img<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;crossOrigin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;anonymous&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 先img.onload监听事件   </span>
    img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        times<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>times <span class="token operator">===</span> imgArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    img<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        times<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>times <span class="token operator">===</span> imgArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 再img.src赋图片链接   </span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> imgArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="书写文字" tabindex="-1"><a class="header-anchor" href="#书写文字" aria-hidden="true">#</a> 书写文字</h2><h3 id="封装方法" tabindex="-1"><a class="header-anchor" href="#封装方法" aria-hidden="true">#</a> 封装方法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">drawText</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">{</span>
    type<span class="token punctuation">,</span> <span class="token comment">// 可用于区分是哪段文案</span>
    words <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    top <span class="token operator">=</span> <span class="token number">250</span><span class="token punctuation">,</span>
    left <span class="token operator">=</span> <span class="token number">250</span><span class="token punctuation">,</span>
    maxWidth<span class="token punctuation">,</span>
    lineHeight<span class="token punctuation">,</span>
    textAlign<span class="token punctuation">,</span>
    color<span class="token punctuation">,</span>
    font<span class="token punctuation">,</span>  <span class="token comment">// &#39;bold 24px&#39;</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> text<span class="token punctuation">;</span>

  <span class="token keyword">let</span> line <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> wordsArr <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>font <span class="token operator">=</span> font<span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>textAlign <span class="token operator">=</span> textAlign<span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> color<span class="token punctuation">;</span>
  <span class="token comment">// 添加空格模拟书信首行缩进</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wordsArr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 设置书信落款top值</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    top <span class="token operator">=</span> baseFromLine<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// canvas书写文字</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> wordsArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> testLine <span class="token operator">=</span> line <span class="token operator">+</span> wordsArr<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> metrics <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">measureText</span><span class="token punctuation">(</span>testLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> testWidth <span class="token operator">=</span> metrics<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>testWidth <span class="token operator">&gt;</span> maxWidth <span class="token operator">&amp;&amp;</span> n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      context<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> left<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>
      line <span class="token operator">=</span> wordsArr<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
      top <span class="token operator">+=</span> lineHeight<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      line <span class="token operator">=</span> testLine<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 记录书信内容最后位置计算落款位置</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    baseFromLine <span class="token operator">=</span> top <span class="token operator">+</span> <span class="token number">43</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  context<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> left<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="方法调用" tabindex="-1"><a class="header-anchor" href="#方法调用" aria-hidden="true">#</a> 方法调用</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">words</span><span class="token operator">:</span> <span class="token string">&#39;给你的信&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">432</span><span class="token punctuation">,</span>
  <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">375</span><span class="token punctuation">,</span>
  <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">390</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token number">35</span><span class="token punctuation">,</span>
  <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#db6502&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">font</span><span class="token operator">:</span> <span class="token string">&#39;bold 30px 黑体&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">words</span><span class="token operator">:</span> <span class="token string">&#39;你好小白：&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">470</span><span class="token punctuation">,</span>
  <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">180</span><span class="token punctuation">,</span>
  <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">390</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token number">43</span><span class="token punctuation">,</span>
  <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#db6502&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">font</span><span class="token operator">:</span> <span class="token string">&#39;normal 18px 黑体&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">words</span><span class="token operator">:</span> <span class="token string">&#39;祝福是柔的夏的是清的雨秋的祝福是晶的露冬的祝福是白的雪我的祝福是真的心缘相遇，情相知，心相惜，这份真挚的友谊，让我真的好感动！感谢一路有您，感谢我们相扶相携走过的快乐时光。这份友谊我会永远铭记在心，感恩在心！&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">505</span><span class="token punctuation">,</span>
  <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">180</span><span class="token punctuation">,</span>
  <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">390</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token number">43</span><span class="token punctuation">,</span>
  <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#db6502&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">font</span><span class="token operator">:</span> <span class="token string">&#39;normal 18px 黑体&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">words</span><span class="token operator">:</span> <span class="token string">&#39;by 小黑&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
  <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">570</span><span class="token punctuation">,</span>
  <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">390</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token number">43</span><span class="token punctuation">,</span>
  <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&#39;right&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#db6502&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">font</span><span class="token operator">:</span> <span class="token string">&#39;normal 18px 黑体&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> text<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">drawText</span><span class="token punctuation">(</span>text<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,27),e=[o];function c(l,u){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","canvas.html.vue"]]);export{k as default};
