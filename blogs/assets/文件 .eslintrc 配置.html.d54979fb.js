import{_ as o,r as e,o as r,c,a as n,b as s,d as p,f as t}from"./app.26d50059.js";const u={},l=n("h1",{id:"文件-eslintrc-配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文件-eslintrc-配置","aria-hidden":"true"},"#"),s(" 文件 .eslintrc 配置")],-1),k={href:"https://juejin.im/post/5efc44225188252e4e0789c6",target:"_blank",rel:"noopener noreferrer"},i=t(`<h2 id="规则" tabindex="-1"><a class="header-anchor" href="#规则" aria-hidden="true">#</a> 规则</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;babel-eslint&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">browser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token string">&#39;airbnb-base&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;html&#39;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;rules&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;no-alert&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用alert confirm prompt</span>
    <span class="token string-property property">&quot;no-array-constructor&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用数组构造器</span>
    <span class="token string-property property">&quot;no-bitwise&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用按位运算符</span>
    <span class="token string-property property">&quot;no-caller&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用arguments.caller或arguments.callee</span>
    <span class="token string-property property">&quot;no-catch-shadow&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止catch子句参数与外部作用域变量同名</span>
    <span class="token string-property property">&quot;no-class-assign&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止给类赋值</span>
    <span class="token string-property property">&quot;no-cond-assign&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在条件表达式中使用赋值语句</span>
    <span class="token string-property property">&quot;no-console&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用console</span>
    <span class="token string-property property">&quot;no-const-assign&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止修改const声明的变量</span>
    <span class="token string-property property">&quot;no-constant-condition&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在条件中使用常量表达式 if(true) if(1)</span>
    <span class="token string-property property">&quot;no-continue&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用continue</span>
    <span class="token string-property property">&quot;no-control-regex&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在正则表达式中使用控制字符</span>
    <span class="token string-property property">&quot;no-debugger&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用debugger</span>
    <span class="token string-property property">&quot;no-delete-var&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 不能对var声明的变量使用delete操作符</span>
    <span class="token string-property property">&quot;no-div-regex&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 不能使用看起来像除法的正则表达式/=foo/</span>
    <span class="token string-property property">&quot;no-dupe-keys&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 在创建对象字面量时不允许键重复 {a:1,a:1}</span>
    <span class="token string-property property">&quot;no-dupe-args&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 函数参数不能重复</span>
    <span class="token string-property property">&quot;no-duplicate-case&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// switch中的case标签不能重复</span>
    <span class="token string-property property">&quot;no-else-return&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 如果if语句里面有return,后面不能跟else语句</span>
    <span class="token string-property property">&quot;no-empty&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 块语句中的内容不能为空</span>
    <span class="token string-property property">&quot;no-empty-character-class&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 正则表达式中的[]内容不能为空</span>
    <span class="token string-property property">&quot;no-empty-label&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用空label</span>
    <span class="token string-property property">&quot;no-eq-null&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止对null使用==或!=运算符</span>
    <span class="token string-property property">&quot;no-eval&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用eval</span>
    <span class="token string-property property">&quot;no-ex-assign&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止给catch语句中的异常参数赋值</span>
    <span class="token string-property property">&quot;no-extend-native&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止扩展native对象</span>
    <span class="token string-property property">&quot;no-extra-bind&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止不必要的函数绑定</span>
    <span class="token string-property property">&quot;no-extra-boolean-cast&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止不必要的bool转换</span>
    <span class="token string-property property">&quot;no-extra-parens&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止非必要的括号</span>
    <span class="token string-property property">&quot;no-extra-semi&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止多余的冒号</span>
    <span class="token string-property property">&quot;no-fallthrough&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 禁止switch穿透</span>
    <span class="token string-property property">&quot;no-floating-decimal&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止省略浮点数中的0 .5 3.</span>
    <span class="token string-property property">&quot;no-func-assign&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止重复的函数声明</span>
    <span class="token string-property property">&quot;no-implicit-coercion&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 禁止隐式转换</span>
    <span class="token string-property property">&quot;no-implied-eval&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用隐式eval</span>
    <span class="token string-property property">&quot;no-inline-comments&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止行内备注</span>
    <span class="token string-property property">&quot;no-inner-declarations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;functions&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在块语句中使用声明（变量或函数）</span>
    <span class="token string-property property">&quot;no-invalid-regexp&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止无效的正则表达式</span>
    <span class="token string-property property">&quot;no-invalid-this&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止无效的this，只能用在构造器，类，对象字面量</span>
    <span class="token string-property property">&quot;no-irregular-whitespace&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 不能有不规则的空格</span>
    <span class="token string-property property">&quot;no-iterator&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用__iterator__ 属性</span>
    <span class="token string-property property">&quot;no-label-var&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// label名不能与var声明的变量名相同</span>
    <span class="token string-property property">&quot;no-labels&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止标签声明</span>
    <span class="token string-property property">&quot;no-lone-blocks&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止不必要的嵌套块</span>
    <span class="token string-property property">&quot;no-lonely-if&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止else语句内只有if语句</span>
    <span class="token string-property property">&quot;no-loop-func&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）</span>
    <span class="token string-property property">&quot;no-mixed-requires&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 声明时不能混用声明类型</span>
    <span class="token string-property property">&quot;no-mixed-spaces-and-tabs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 禁止混用tab和空格</span>
    <span class="token string-property property">&quot;linebreak-style&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;windows&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 换行风格</span>
    <span class="token string-property property">&quot;no-multi-spaces&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 不能用多余的空格</span>
    <span class="token string-property property">&quot;no-multi-str&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 字符串不能用\\换行</span>
    <span class="token string-property property">&quot;no-multiple-empty-lines&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;max&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 空行最多不能超过2行</span>
    <span class="token string-property property">&quot;no-native-reassign&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 不能重写native对象</span>
    <span class="token string-property property">&quot;no-negated-in-lhs&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// in 操作符的左边不能有!</span>
    <span class="token string-property property">&quot;no-nested-ternary&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用嵌套的三目运算</span>
    <span class="token string-property property">&quot;no-new&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在使用new构造一个实例后不赋值</span>
    <span class="token string-property property">&quot;no-new-func&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用new Function</span>
    <span class="token string-property property">&quot;no-new-object&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用new Object()</span>
    <span class="token string-property property">&quot;no-new-require&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用new require</span>
    <span class="token string-property property">&quot;no-new-wrappers&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用new创建包装实例，new String new Boolean new Number</span>
    <span class="token string-property property">&quot;no-obj-calls&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 不能调用内置的全局对象，比如Math() JSON()</span>
    <span class="token string-property property">&quot;no-octal&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用八进制数字</span>
    <span class="token string-property property">&quot;no-octal-escape&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用八进制转义序列</span>
    <span class="token string-property property">&quot;no-param-reassign&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止给参数重新赋值</span>
    <span class="token string-property property">&quot;no-path-concat&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// node中不能使用__dirname或__filename做路径拼接</span>
    <span class="token string-property property">&quot;no-plusplus&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用++，--</span>
    <span class="token string-property property">&quot;no-process-env&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用p<wbr>rocess.env</span>
    <span class="token string-property property">&quot;no-process-exit&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用process.exit()</span>
    <span class="token string-property property">&quot;no-proto&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用__proto__属性</span>
    <span class="token string-property property">&quot;no-redeclare&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止重复声明变量</span>
    <span class="token string-property property">&quot;no-regex-spaces&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在正则表达式字面量中使用多个空格 /foo bar/</span>
    <span class="token string-property property">&quot;no-restricted-modules&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 如果禁用了指定模块，使用就会报错</span>
    <span class="token string-property property">&quot;no-return-assign&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// return 语句中不能有赋值表达式</span>
    <span class="token string-property property">&quot;no-script-url&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用javascript:void(0)</span>
    <span class="token string-property property">&quot;no-self-compare&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 不能比较自身</span>
    <span class="token string-property property">&quot;no-sequences&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用逗号运算符</span>
    <span class="token string-property property">&quot;no-shadow&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span>
    <span class="token string-property property">&quot;no-shadow-restricted-names&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 严格模式中规定的限制标识符不能作为声明时的变量名使用</span>
    <span class="token string-property property">&quot;no-spaced-func&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 函数调用时 函数名与()之间不能有空格</span>
    <span class="token string-property property">&quot;no-sparse-arrays&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止稀疏数组， [1,,2]</span>
    <span class="token string-property property">&quot;no-sync&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// nodejs 禁止同步方法</span>
    <span class="token string-property property">&quot;no-ternary&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用三目运算符</span>
    <span class="token string-property property">&quot;no-trailing-spaces&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 一行结束后面不要有空格</span>
    <span class="token string-property property">&quot;no-this-before-super&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 在调用super()之前不能使用this或super</span>
    <span class="token string-property property">&quot;no-throw-literal&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止抛出字面量错误 throw &quot;error&quot;;</span>
    <span class="token string-property property">&quot;no-undef&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 不能有未定义的变量</span>
    <span class="token string-property property">&quot;no-undef-init&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 变量初始化时不能直接给它赋值为undefined</span>
    <span class="token string-property property">&quot;no-undefined&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 不能使用undefined</span>
    <span class="token string-property property">&quot;no-unexpected-multiline&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 避免多行表达式</span>
    <span class="token string-property property">&quot;no-underscore-dangle&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 标识符不能以_开头或结尾</span>
    <span class="token string-property property">&quot;no-unneeded-ternary&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止不必要的嵌套 var isYes = answer === 1 ? true : false;</span>
    <span class="token string-property property">&quot;no-unreachable&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 不能有无法执行的代码</span>
    <span class="token string-property property">&quot;no-unused-expressions&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止无用的表达式</span>
    <span class="token string-property property">&quot;no-unused-vars&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;vars&quot;</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token string">&quot;after-used&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 不能有声明后未被使用的变量或参数</span>
    <span class="token string-property property">&quot;no-use-before-define&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 未定义前不能使用</span>
    <span class="token string-property property">&quot;no-useless-call&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止不必要的call和apply</span>
    <span class="token string-property property">&quot;no-void&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁用void操作符</span>
    <span class="token string-property property">&quot;no-var&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 禁用var，用let和const代替</span>
    <span class="token string-property property">&quot;no-warning-comments&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;terms&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;todo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fixme&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;location&quot;</span><span class="token operator">:</span> <span class="token string">&quot;start&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 不能有警告备注</span>
    <span class="token string-property property">&quot;no-with&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁用with</span>

    <span class="token string-property property">&quot;array-bracket-spacing&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 是否允许非空数组里面有多余的空格</span>
    <span class="token string-property property">&quot;arrow-parens&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 箭头函数用小括号括起来</span>
    <span class="token string-property property">&quot;arrow-spacing&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// =&gt;的前/后括号</span>
    <span class="token string-property property">&quot;accessor-pairs&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 在对象中使用getter/setter</span>
    <span class="token string-property property">&quot;block-scoped-var&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 块语句中使用var</span>
    <span class="token string-property property">&quot;brace-style&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;1tbs&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 大括号风格</span>
    <span class="token string-property property">&quot;callback-return&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 避免多次调用回调什么的</span>
    <span class="token string-property property">&quot;camelcase&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 强制驼峰法命名</span>
    <span class="token string-property property">&quot;comma-dangle&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 对象字面量项尾不能有逗号</span>
    <span class="token string-property property">&quot;comma-spacing&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 逗号前后的空格</span>
    <span class="token string-property property">&quot;comma-style&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;last&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 逗号风格，换行时在行首还是行尾</span>
    <span class="token string-property property">&quot;complexity&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 循环复杂度</span>
    <span class="token string-property property">&quot;computed-property-spacing&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 是否允许计算后的键名什么的</span>
    <span class="token string-property property">&quot;consistent-return&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// return 后面是否允许省略</span>
    <span class="token string-property property">&quot;consistent-this&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;that&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// this别名</span>
    <span class="token string-property property">&quot;constructor-super&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 非派生类不能调用super，派生类必须调用super</span>
    <span class="token string-property property">&quot;curly&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 必须使用 if(){} 中的{}</span>
    <span class="token string-property property">&quot;default-case&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// switch语句最后必须有default</span>
    <span class="token string-property property">&quot;dot-location&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 对象访问符的位置，换行的时候在行首还是行尾</span>
    <span class="token string-property property">&quot;dot-notation&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;allowKeywords&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 避免不必要的方括号</span>
    <span class="token string-property property">&quot;eol-last&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 文件以单一的换行符结束</span>
    <span class="token string-property property">&quot;eqeqeq&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 必须使用全等</span>
    <span class="token string-property property">&quot;func-names&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 函数表达式必须有名字</span>
    <span class="token string-property property">&quot;func-style&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;declaration&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 函数风格，规定只能使用函数声明/函数表达式</span>
    <span class="token string-property property">&quot;generator-star-spacing&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 生成器函数*的前后空格</span>
    <span class="token string-property property">&quot;guard-for-in&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// for in循环要用if语句过滤</span>
    <span class="token string-property property">&quot;handle-callback-err&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// nodejs 处理错误</span>
    <span class="token string-property property">&quot;id-length&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 变量名长度</span>
    <span class="token string-property property">&quot;indent&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 缩进风格</span>
    <span class="token string-property property">&quot;init-declarations&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 声明时必须赋初值</span>
    <span class="token string-property property">&quot;key-spacing&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;beforeColon&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;afterColon&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 对象字面量中冒号的前后空格</span>
    <span class="token string-property property">&quot;lines-around-comment&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 行前/行后备注</span>
    <span class="token string-property property">&quot;max-depth&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 嵌套块深度</span>
    <span class="token string-property property">&quot;max-len&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 字符串最大长度</span>
    <span class="token string-property property">&quot;max-nested-callbacks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 回调嵌套深度</span>
    <span class="token string-property property">&quot;max-params&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 函数最多只能有3个参数</span>
    <span class="token string-property property">&quot;max-statements&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 函数内最多有几个声明</span>
    <span class="token string-property property">&quot;new-cap&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用</span>
    <span class="token string-property property">&quot;new-parens&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// new时必须加小括号</span>
    <span class="token string-property property">&quot;newline-after-var&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 变量声明后是否需要空一行</span>
    <span class="token string-property property">&quot;object-curly-spacing&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 大括号内是否允许不必要的空格</span>
    <span class="token string-property property">&quot;object-shorthand&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 强制对象字面量缩写语法</span>
    <span class="token string-property property">&quot;one-var&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 连续声明</span>
    <span class="token string-property property">&quot;operator-assignment&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 赋值运算符 += -=什么的</span>
    <span class="token string-property property">&quot;operator-linebreak&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;after&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 换行时运算符在行尾还是行首</span>
    <span class="token string-property property">&quot;padded-blocks&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 块语句内行首行尾是否要空行</span>
    <span class="token string-property property">&quot;prefer-const&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 首选const</span>
    <span class="token string-property property">&quot;prefer-spread&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 首选展开运算</span>
    <span class="token string-property property">&quot;prefer-reflect&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 首选Reflect的方法</span>
    <span class="token string-property property">&quot;quotes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;single&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 引号类型 \`\` &quot;&quot; &#39;&#39;</span>
    <span class="token string-property property">&quot;quote-props&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 对象字面量中的属性名是否强制双引号</span>
    <span class="token string-property property">&quot;radix&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// parseInt必须指定第二个参数</span>
    <span class="token string-property property">&quot;id-match&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 命名检测</span>
    <span class="token string-property property">&quot;require-yield&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 生成器函数必须有yield</span>
    <span class="token string-property property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 语句强制分号结尾</span>
    <span class="token string-property property">&quot;semi-spacing&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;before&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;after&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 分号前后空格</span>
    <span class="token string-property property">&quot;sort-vars&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 变量声明时排序</span>
    <span class="token string-property property">&quot;space-after-keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 关键字后面是否要空一格</span>
    <span class="token string-property property">&quot;space-before-blocks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 不以新行开始的块{前面要不要有空格</span>
    <span class="token string-property property">&quot;space-before-function-paren&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 函数定义时括号前面要不要有空格</span>
    <span class="token string-property property">&quot;space-in-parens&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 小括号里面要不要有空格</span>
    <span class="token string-property property">&quot;space-infix-ops&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 中缀操作符周围要不要有空格</span>
    <span class="token string-property property">&quot;space-return-throw-case&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// return throw case后面要不要加空格</span>
    <span class="token string-property property">&quot;space-unary-ops&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;words&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;nonwords&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 一元运算符的前/后要不要加空格</span>
    <span class="token string-property property">&quot;spaced-comment&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 注释风格要不要有空格什么的</span>
    <span class="token string-property property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 使用严格模式</span>
    <span class="token string-property property">&quot;use-isnan&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 禁止比较时使用NaN，只能用isNaN()</span>
    <span class="token string-property property">&quot;valid-jsdoc&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// jsdoc规则</span>
    <span class="token string-property property">&quot;valid-typeof&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 必须使用合法的typeof的值</span>
    <span class="token string-property property">&quot;vars-on-top&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// var必须放在作用域顶部</span>
    <span class="token string-property property">&quot;wrap-iife&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;inside&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 立即执行函数表达式的小括号风格</span>
    <span class="token string-property property">&quot;wrap-regex&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 正则表达式字面量用小括号包起来</span>
    <span class="token string-property property">&quot;yoda&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span> <span class="token comment">// 禁止尤达条件</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,2),m={class:"custom-container tip"},q=n("p",{class:"custom-container-title"},"Tips",-1),y={href:"https://blog.csdn.net/helpzp2008/article/details/51507428",target:"_blank",rel:"noopener noreferrer"},g=t(`<h2 id="某文件禁用" tabindex="-1"><a class="header-anchor" href="#某文件禁用" aria-hidden="true">#</a> 某文件禁用</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* eslint-disable */</span>

<span class="token comment">/* eslint-disable no-alert, no-console */</span>
</code></pre></div>`,2);function b(d,f){const a=e("ExternalLinkIcon");return r(),c("div",null,[l,n("p",null,[n("a",k,[s("掘金文章 - eslint代码规范配置（含详细规则介绍和示例说明）"),p(a)])]),i,n("div",m,[q,n("p",null,[n("a",y,[s("详细规则来源：https://blog.csdn.net/helpzp2008/article/details/51507428"),p(a)])])]),g])}const w=o(u,[["render",b],["__file","文件 .eslintrc 配置.html.vue"]]);export{w as default};
