import{_ as s,o as n,c as a,f as p}from"./app.93195575.js";const t={},o=p(`<h1 id="md-表格生成" tabindex="-1"><a class="header-anchor" href="#md-表格生成" aria-hidden="true">#</a> md 表格生成</h1><p>本示例并不具备通用性，仅在一次场景中使用到，此处记录下，以备查阅。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> rowLen <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> rowLen <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">+=</span> <span class="token string">&#39;| \`&#39;</span><span class="token operator">+</span>data<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39;\` | &#39;</span><span class="token operator">+</span>data<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39; |&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> rowLen <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">+=</span> <span class="token string">&#39; \`&#39;</span><span class="token operator">+</span>data<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39;\` | &#39;</span><span class="token operator">+</span>data<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39; | \\n&#39;</span> <span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    str <span class="token operator">+=</span> <span class="token string">&#39; \`&#39;</span><span class="token operator">+</span>data<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39;\` | &#39;</span><span class="token operator">+</span>data<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39; |&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 结果</span>
<span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">a</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">|</span> a <span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">b</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">|</span> b <span class="token operator">|</span> 
<span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">c</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">|</span> c <span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">d</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">|</span> d <span class="token operator">|</span> 
</code></pre></div>`,3),e=[o];function c(l,r){return n(),a("div",null,e)}const u=s(t,[["render",c],["__file","md 表格生成.html.vue"]]);export{u as default};
