(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{598:function(t,n,e){"use strict";e.r(n);var r=e(1),a=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"canvas做纹理图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#canvas做纹理图"}},[t._v("#")]),t._v(" canvas做纹理图")]),t._v(" "),e("h2",{attrs:{id:"index-html文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#index-html文件"}},[t._v("#")]),t._v(" index.html文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <style>\n       #canvasdiv{\n           width: 80%;\n           height: 600px;\n           background: black;\n           margin: 20px auto;\n       }\n    </style>\n</head>\n<body>\n    <div id="canvasdiv"></div>\n</body>\n</html>\n<script src="./js-three/three.min.js"><\/script>\n<script src="./js-three/clock.js"><\/script>\n<script src="./js-three/threedemo.js"><\/script>\n')])])]),e("h2",{attrs:{id:"clock-js-文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clock-js-文件"}},[t._v("#")]),t._v(" clock.js 文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("var canvas;\n\nfunction clock() {\n\tcanvas = document.createElement('canvas');\n\tcanvas.width = 200;\n\tcanvas.height = 200;\n\tvar ctx = canvas.getContext('2d');\n\tif (ctx) {\n\t\tvar timerId;\n\t\tvar frameRate = 60;\n\n\t\tfunction canvObject() {\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\t\t\tthis.rotation = 0;\n\t\t\tthis.borderWidth = 2;\n\t\t\tthis.borderColor = '#000000';\n\t\t\tthis.fill = false;\n\t\t\tthis.fillColor = '#ff0000';\n\t\t\tthis.update = function () {\n\t\t\t\tif (!this.ctx) throw new Error('你没有指定ctx对象。');\n\t\t\t\tvar ctx = this.ctx\n\t\t\t\tctx.save();\n\t\t\t\tctx.lineWidth = this.borderWidth;\n\t\t\t\tctx.strokeStyle = this.borderColor;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.translate(this.x, this.y);\n\t\t\t\tif (this.rotation) ctx.rotate(this.rotation * Math.PI / 180);\n\t\t\t\tif (this.draw) this.draw(ctx);\n\t\t\t\tif (this.fill) ctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t};\n\n\t\tfunction Line() {};\n\t\tLine.prototype = new canvObject();\n\t\tLine.prototype.fill = false;\n\t\tLine.prototype.start = [0, 0];\n\t\tLine.prototype.end = [5, 5];\n\t\tLine.prototype.draw = function (ctx) {\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo.apply(ctx, this.start);\n\t\t\tctx.lineTo.apply(ctx, this.end);\n\t\t\tctx.closePath();\n\t\t};\n\n\t\tfunction Circle() {};\n\t\tCircle.prototype = new canvObject();\n\t\tCircle.prototype.draw = function (ctx) {\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(0, 0, this.radius, 0, 2 * Math.PI, true);\n\t\t\tctx.closePath();\n\t\t};\n\n\t\tvar circle = new Circle();\n\t\tcircle.ctx = ctx;\n\t\tcircle.x = 100;\n\t\tcircle.y = 100;\n\t\tcircle.radius = 90;\n\t\tcircle.fill = true;\n\t\tcircle.borderWidth = 6;\n\t\tcircle.fillColor = '#ffffff';\n\n\t\tvar hour = new Line();\n\t\thour.ctx = ctx;\n\t\thour.x = 100;\n\t\thour.y = 100;\n\t\thour.borderColor = \"#000000\";\n\t\thour.borderWidth = 10;\n\t\thour.rotation = 0;\n\t\thour.start = [0, 20];\n\t\thour.end = [0, -50];\n\n\t\tvar minute = new Line();\n\t\tminute.ctx = ctx;\n\t\tminute.x = 100;\n\t\tminute.y = 100;\n\t\tminute.borderColor = \"#333333\";\n\t\tminute.borderWidth = 7;\n\t\tminute.rotation = 0;\n\t\tminute.start = [0, 20];\n\t\tminute.end = [0, -70];\n\n\t\tvar seconds = new Line();\n\t\tseconds.ctx = ctx;\n\t\tseconds.x = 100;\n\t\tseconds.y = 100;\n\t\tseconds.borderColor = \"#ff0000\";\n\t\tseconds.borderWidth = 4;\n\t\tseconds.rotation = 0;\n\t\tseconds.start = [0, 20];\n\t\tseconds.end = [0, -80];\n\n\t\tvar center = new Circle();\n\t\tcenter.ctx = ctx;\n\t\tcenter.x = 100;\n\t\tcenter.y = 100;\n\t\tcenter.radius = 5;\n\t\tcenter.fill = true;\n\t\tcenter.borderColor = 'orange';\n\n\t\tfor (var i = 0, ls = [], cache; i < 12; i++) {\n\t\t\tcache = ls[i] = new Line();\n\t\t\tcache.ctx = ctx;\n\t\t\tcache.x = 100;\n\t\t\tcache.y = 100;\n\t\t\tcache.borderColor = \"orange\";\n\t\t\tcache.borderWidth = 2;\n\t\t\tcache.rotation = i * 30;\n\t\t\tcache.start = [0, -70];\n\t\t\tcache.end = [0, -80];\n\t\t}\n\n\t\ttimerId = setInterval(function () {\n\t\t\t// 清除画布\n\t\t\tctx.clearRect(0, 0, 200, 200);\n\t\t\t// 填充背景色\n\t\t\tctx.fillStyle = 'orange';\n\t\t\tctx.fillRect(0, 0, 200, 200);\n\t\t\t// 表盘\n\t\t\tcircle.update();\n\t\t\t// 刻度\n\t\t\tfor (var i = 0; cache = ls[i++];) cache.update();\n\t\t\t// 时针\n\t\t\thour.rotation = (new Date()).getHours() * 30;\n\t\t\thour.update();\n\t\t\t// 分针\n\t\t\tminute.rotation = (new Date()).getMinutes() * 6;\n\t\t\tminute.update();\n\t\t\t// 秒针\n\t\t\tseconds.rotation = (new Date()).getSeconds() * 6;\n\t\t\tseconds.update();\n\t\t\t// 中心圆\n\t\t\tcenter.update();\n\t\t}, (1000 / frameRate) | 0);\n\t} else {\n\t\talert('您的浏览器不支持Canvas无法预览.\\n跟我一起说：\"Fuck Internet Exploer!\"');\n\t}\n}\n")])])]),e("h2",{attrs:{id:"threedemo-js-文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#threedemo-js-文件"}},[t._v("#")]),t._v(" threedemo.js 文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("/* \n    1、初始化场景、相机、渲染器\n    2、实时渲染\n    3、canvas做纹理图\n        (1)在canvas上画时钟\n        (2)将canvas传递给Texture纹理\n        (3)创建几何体，并将纹理传递给材质\n        (4)构造THREE.Mesh\n*/\n\nvar scene;          \nvar camera;        \nvar renderer;  \nvar width = document.getElementById('canvasdiv').clientWidth;\nvar height = document.getElementById('canvasdiv').clientHeight;\n\n// 开始执行\nthreeStart();\nfunction threeStart() {\n    clock();                        // (1)先执行canvas绘制的图片\n    init(); \n    initCanvas();\n    animate(); \n}\n\n// 1、初始化场景、相机、渲染器\nfunction init() {\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n    camera.position.z = 10;\n    renderer = new THREE.WebGLRenderer({});\n    renderer.setSize(width, height);\n    document.getElementById('canvasdiv').appendChild(renderer.domElement);\n}\n// 2、实时渲染\nfunction animate() {\n    renderer.render(scene, camera);\n    requestAnimationFrame(animate);    \n    // 使物体运动\n    texture.needsUpdate = true;\n    mesh.rotation.x -= 0.01;\n    mesh.rotation.y -= 0.01;\n}\n\n// 3、画纹理物体\nvar texture;\nvar mesh;\nfunction initCanvas() {\n    // (2)将canvas传递给Texture纹理\n    texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n    // (3)创建几何体，将纹理传递给材质\n    var geometry = new THREE.BoxGeometry(2, 2, 2);\n    var material = new THREE.MeshBasicMaterial({map:texture}); \n    // (4)构造THREE.Mesh\n    mesh = new THREE.Mesh( geometry,material );\n    scene.add( mesh );\n} \n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);