import{_ as n,o as s,c as a,f as p}from"./app.d9b83bc9.js";const t={},e=p(`<h1 id="金额处理" tabindex="-1"><a class="header-anchor" href="#金额处理" aria-hidden="true">#</a> 金额处理</h1><h2 id="金额-分-转换-元-处理" tabindex="-1"><a class="header-anchor" href="#金额-分-转换-元-处理" aria-hidden="true">#</a> 金额&#39;分&#39;转换&#39;元&#39;处理</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">priceHandle</span><span class="token punctuation">(</span><span class="token parameter">price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">let</span> newPrice <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newPrice <span class="token operator">=</span> price<span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>price <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newPrice <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">Number</span><span class="token punctuation">(</span>price <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.00</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>price <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newPrice <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">Number</span><span class="token punctuation">(</span>price <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">0</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  newPrice <span class="token operator">=</span> price <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> newPrice<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre></div><h2 id="金额计算方法" tabindex="-1"><a class="header-anchor" href="#金额计算方法" aria-hidden="true">#</a> 金额计算方法</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">moneyHandle</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> len</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span>；
<span class="token punctuation">}</span>
</code></pre></div>`,5),o=[e];function c(u,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","金额处理.html.vue"]]);export{r as default};
